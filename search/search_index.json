{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"body{ background: rgb(0,68,68); background: linear-gradient(180deg, rgba(0,68,68,1) 8%, rgba(22,102,39,1) 100%); } /*Hide footer*/ .md-footer { display:none; } .md-content__inner { //display:none; } /* Application header should be static for the landing page */ .md-header { position: initial; background-color: #00444400; } /* Remove spacing, as we cannot hide it completely */ .md-main__inner { margin: 0; } .md-tabs { background-color: #00444400; } /* Hide table of contents */ @media screen and (min-width: 60em) { .md-sidebar--secondary { display: none; } } /* Hide navigation */ @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none; } } @media screen and (max-width: 567px){ .tx-hero { padding-bottom: 6rem !important; width: 95% !important; margin-top: 0rem !important; margin-left: 0rem !important; height: 10rem; } } @media screen and (max-width: 360px){ .md-typeset .md-button { margin-bottom: 0.5rem; width: 62%; } .md-typeset h1 { font-size: 1.4rem; } } @media screen and (max-width: 286px){ .md-header-nav__title { display: none !important; } } @media screen and (min-width: 60em) .tx-hero { max-width: 19rem; margin-top: 3.5rem; padding-bottom: 14vw; } .tx-hero { padding-bottom: 6rem; width: 55%; margin-top: 3rem; margin-left: 3rem; } .flex-container { display: flex; flex-flow: row wrap; background-color: DodgerBlue; } .flex-container > div { background-color: #f1f1f1; width: 100px; margin: 10px; text-align: center; line-height: 75px; font-size: 30px; } html, body { margin 0; padding: 0; } .background { position: absolute; top: 0; bottom: 0; left: 0; right: 0; z-index: -1; } .md-announce { background-color: hsl(0deg 0% 0% / 16%); } .md-typeset h1 { color: hsl(0deg 0% 100%); font-weight: 900; } .md-typeset .md-button:focus, .md-typeset .md-button:hover { background-color: hsl(180deg 100% 11%); } .start:hover { background-color: hsl(180deg 100% 11%) !important; color: white !important; } One assessment method to rule them all The ITL performance system can help you create a science-backed-up methodology approach to measure and grade your business system performance. Get started Go to GitHub","title":"ITL Documentation"},{"location":"diagram/","text":"Block Diagram Internal Organization The following block diagram shows the ITL internal organization:","title":"Block diagram"},{"location":"diagram/#block-diagram","text":"","title":"Block Diagram"},{"location":"diagram/#internal-organization","text":"The following block diagram shows the ITL internal organization:","title":"Internal Organization"},{"location":"fuzzy-intro/","text":"What are fuzzy sets? Classical sets vs fuzzy sets Fuzzy logic is a mathematical theory model made to bridge the gap between humans and computers. Computers think about things in a mathematical and logical manner, but human beings do not. We are prone to ambiguity, so this theory allows computers to think ambiguously as well. Human ambiguity If we want an example of what exactly a fuzzy set looks like, we could conduct survey and gather data. Let's say we want to know what middle-aged means. If we asked 100 people when middle age starts and ends, we might end up with a definite majority, the prevalent opinion being that middle age starts at 35 and ends at 55. Therefore, we could say that people aged between 35 and 55 are considered to be middle-aged. The classical set theory cannot process this kind of information. However, in a fuzzy set world, this is a piece of cake.","title":"What are fuzzy sets?"},{"location":"fuzzy-intro/#what-are-fuzzy-sets","text":"","title":"What are fuzzy sets?"},{"location":"fuzzy-intro/#classical-sets-vs-fuzzy-sets","text":"Fuzzy logic is a mathematical theory model made to bridge the gap between humans and computers. Computers think about things in a mathematical and logical manner, but human beings do not. We are prone to ambiguity, so this theory allows computers to think ambiguously as well.","title":"Classical sets vs fuzzy sets"},{"location":"fuzzy-intro/#human-ambiguity","text":"If we want an example of what exactly a fuzzy set looks like, we could conduct survey and gather data. Let's say we want to know what middle-aged means. If we asked 100 people when middle age starts and ends, we might end up with a definite majority, the prevalent opinion being that middle age starts at 35 and ends at 55. Therefore, we could say that people aged between 35 and 55 are considered to be middle-aged. The classical set theory cannot process this kind of information. However, in a fuzzy set world, this is a piece of cake.","title":"Human ambiguity"},{"location":"fuzzy-mes-par/","text":"Choosing measurement parameters This documentation section will be available soon.","title":"Choosing measurement parameters"},{"location":"fuzzy-mes-par/#choosing-measurement-parameters","text":"This documentation section will be available soon.","title":"Choosing measurement parameters"},{"location":"fuzzy-radar/","text":"Radar Charts This documentation section will be available soon.","title":"Radar charts"},{"location":"fuzzy-radar/#radar-charts","text":"This documentation section will be available soon.","title":"Radar Charts"},{"location":"fuzzy/","text":"Fuzzy membership functions What is fuzzy membership function? The fuzzy membership function computes the element's degree of the membership to a given fuzzy set. This measurement is numerically presented as the value between 0 and 1. Supported functions At the moment, ITL supports two types of fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of the fuzzy function based on provided parameters. The Type 1 fuzzy membership function \u2014 Rising Slope This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 0,& \\text{ if } v_i \\leq a_i \\\\ \\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 1,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 1 fuzzy function: Note how the function starts rising after value of 100 (so the parameter a here equals 100) and has an linear increasing value up to 400. After this point the grade (y-axis) has the constant value of 1.0 (so the parameter b here equals to 400). The Type 2 fuzzy membership function \u2014 Falling Slope This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 1,& \\text{ if } v_i \\leq a_i \\\\ 1-\\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 0,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 2 fuzzy function: Note how the function immediately starts falling until value of 5 (so the parameter a here equals 0) After this point the grade (y-axis) has the constant value of 0.0 (so the parameter b here equals to 5).","title":"Fuzzy membership functions"},{"location":"fuzzy/#fuzzy-membership-functions","text":"","title":"Fuzzy membership functions"},{"location":"fuzzy/#what-is-fuzzy-membership-function","text":"The fuzzy membership function computes the element's degree of the membership to a given fuzzy set. This measurement is numerically presented as the value between 0 and 1.","title":"What is fuzzy membership function?"},{"location":"fuzzy/#supported-functions","text":"At the moment, ITL supports two types of fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of the fuzzy function based on provided parameters.","title":"Supported functions"},{"location":"fuzzy/#the-type-1-fuzzy-membership-function-rising-slope","text":"This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 0,& \\text{ if } v_i \\leq a_i \\\\ \\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 1,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 1 fuzzy function: Note how the function starts rising after value of 100 (so the parameter a here equals 100) and has an linear increasing value up to 400. After this point the grade (y-axis) has the constant value of 1.0 (so the parameter b here equals to 400).","title":"The Type 1 fuzzy membership function \u2014 Rising Slope"},{"location":"fuzzy/#the-type-2-fuzzy-membership-function-falling-slope","text":"This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 1,& \\text{ if } v_i \\leq a_i \\\\ 1-\\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 0,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 2 fuzzy function: Note how the function immediately starts falling until value of 5 (so the parameter a here equals 0) After this point the grade (y-axis) has the constant value of 0.0 (so the parameter b here equals to 5).","title":"The Type 2 fuzzy membership function \u2014 Falling Slope"},{"location":"grammar/","text":"Grammar Grammar The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"assessment\" STRING code_block -> pocetak_izvestaja | \"metrics\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"grade\" NAME \";\" -> oceni_metrike | \"grade cumulative\" NAME \",\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"grade comparative\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"grade singular\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"print\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"make excel report\" STRING \";\" -> pravi_izvestaj | \"draw metric\" NAME (\",\" NAME)* \"from\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_lin | \"trapezoid(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_tra | \"triangle(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_tri | \"gauss(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_gau | \"gauss2(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_gau2 | \"sigmoid(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_sig set: NAME \";\" -> from COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT","title":"Grammar"},{"location":"grammar/#grammar","text":"","title":"Grammar"},{"location":"grammar/#grammar_1","text":"The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"assessment\" STRING code_block -> pocetak_izvestaja | \"metrics\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"grade\" NAME \";\" -> oceni_metrike | \"grade cumulative\" NAME \",\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"grade comparative\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"grade singular\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"print\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"make excel report\" STRING \";\" -> pravi_izvestaj | \"draw metric\" NAME (\",\" NAME)* \"from\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_lin | \"trapezoid(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_tra | \"triangle(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_tri | \"gauss(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_gau | \"gauss2(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_gau2 | \"sigmoid(\" STRING? \",\"? NUMBER \",\" NUMBER \",\" NUMBER \")\" -> par_mer_sig set: NAME \";\" -> from COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT","title":"Grammar"},{"location":"ide-as-res/","text":"Understanding assessment results This documentation section will be available soon.","title":"Understanding the assessment results"},{"location":"ide-as-res/#understanding-assessment-results","text":"This documentation section will be available soon.","title":"Understanding assessment results"},{"location":"ide-excel/","text":"Creating the Excel report Example code for report generating assessment \"June Performance Assessment Report - E-bank Group\" { metrics E_bank_1 { Compl = gauss2(2.4,6,3,8,3) New_Credit_Cards = (218,100,400) Screen_Time = trapezoid(\"-\",4,1,5,10,16) New_Loans = sigmoid(\"-\",2.3,6.2,8.4) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = gauss2(3.5,6,3,8,3) New_Credit_Cards = (295,100,400) Screen_Time = triangle(4.9,1,5,15) New_Loans = sigmoid(\"-\",7.3,6.2,8.4) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = gauss(1.2,6,3) New_Credit_Cards = (191,100,400) Screen_Time = triangle(9.5,1,5,15) New_Loans = sigmoid(\"-\",7.3,6.2,8.4) Loan_Lead_Time = (2.52,30,15) } grade cumulative E_bank_1, E_bank_2, E_bank_3; grade singular E_bank_1, E_bank_2, E_bank_3; grade comparative E_bank_1, E_bank_2; print E_bank_1, E_bank_2, E_bank_3; make excel report \"Excel_Tutorial\"; } Structure of the generated Excel report List of the all assessment metrics # Set Name Type Sign Param v Param a Param b Param c Param d 0 E_bank_1 Compl Gaussian type 2 + 2.4 6 3 8 3 1 E_bank_1 New_Credit_Cards Linear + 218 100 400 / / 2 E_bank_1 Screen_Time Trapezoidal - 4 1 5 10 16 3 E_bank_1 New_Loans Sigmoidal - 2.3 6.2 8.4 / / 4 E_bank_1 Loan_Lead_Time Linear + 4.43 30 15 / / ... ... ... ... ... ... ... ... ... ... 12 E_bank_3 Screen_Time Triangular + 9.5 1 5 15 / 13 E_bank_3 New_Loans Sigmoidal - 7.3 6.2 8.4 / / 14 E_bank_3 Loan_Lead_Time Linear + 2.52 30 15 / / List of the individual grades # Metric Grade Max grade 0 E_bank_1 70 100 1 E_bank_2 41 100 2 E_bank_3 83 100 List containing the comaprative grades # Metric Grade Max grade 0 E_bank_1 57 100 1 E_bank_2 55 100 List containing the cumultive grade # Metric Grade Max grade 0 E_bank_1 1 E_bank_2 2 E_bank_3 3 50 100 Example Excel report You can download the example Excel report from this tutorial here.","title":"Creating the Excel report"},{"location":"ide-excel/#creating-the-excel-report","text":"","title":"Creating the Excel report"},{"location":"ide-excel/#example-code-for-report-generating","text":"assessment \"June Performance Assessment Report - E-bank Group\" { metrics E_bank_1 { Compl = gauss2(2.4,6,3,8,3) New_Credit_Cards = (218,100,400) Screen_Time = trapezoid(\"-\",4,1,5,10,16) New_Loans = sigmoid(\"-\",2.3,6.2,8.4) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = gauss2(3.5,6,3,8,3) New_Credit_Cards = (295,100,400) Screen_Time = triangle(4.9,1,5,15) New_Loans = sigmoid(\"-\",7.3,6.2,8.4) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = gauss(1.2,6,3) New_Credit_Cards = (191,100,400) Screen_Time = triangle(9.5,1,5,15) New_Loans = sigmoid(\"-\",7.3,6.2,8.4) Loan_Lead_Time = (2.52,30,15) } grade cumulative E_bank_1, E_bank_2, E_bank_3; grade singular E_bank_1, E_bank_2, E_bank_3; grade comparative E_bank_1, E_bank_2; print E_bank_1, E_bank_2, E_bank_3; make excel report \"Excel_Tutorial\"; }","title":"Example code for report generating"},{"location":"ide-excel/#structure-of-the-generated-excel-report","text":"","title":"Structure of the generated Excel report"},{"location":"ide-excel/#list-of-the-all-assessment-metrics","text":"# Set Name Type Sign Param v Param a Param b Param c Param d 0 E_bank_1 Compl Gaussian type 2 + 2.4 6 3 8 3 1 E_bank_1 New_Credit_Cards Linear + 218 100 400 / / 2 E_bank_1 Screen_Time Trapezoidal - 4 1 5 10 16 3 E_bank_1 New_Loans Sigmoidal - 2.3 6.2 8.4 / / 4 E_bank_1 Loan_Lead_Time Linear + 4.43 30 15 / / ... ... ... ... ... ... ... ... ... ... 12 E_bank_3 Screen_Time Triangular + 9.5 1 5 15 / 13 E_bank_3 New_Loans Sigmoidal - 7.3 6.2 8.4 / / 14 E_bank_3 Loan_Lead_Time Linear + 2.52 30 15 / /","title":"List of the all assessment metrics"},{"location":"ide-excel/#list-of-the-individual-grades","text":"# Metric Grade Max grade 0 E_bank_1 70 100 1 E_bank_2 41 100 2 E_bank_3 83 100","title":"List of the individual grades"},{"location":"ide-excel/#list-containing-the-comaprative-grades","text":"# Metric Grade Max grade 0 E_bank_1 57 100 1 E_bank_2 55 100","title":"List containing the comaprative grades"},{"location":"ide-excel/#list-containing-the-cumultive-grade","text":"# Metric Grade Max grade 0 E_bank_1 1 E_bank_2 2 E_bank_3 3 50 100","title":"List containing the cumultive grade"},{"location":"ide-excel/#example-excel-report","text":"You can download the example Excel report from this tutorial here.","title":"Example Excel report"},{"location":"ide-exi-pro/","text":"Opening the existing project Visual tutorial","title":"Opening the existing project"},{"location":"ide-exi-pro/#opening-the-existing-project","text":"","title":"Opening the existing project"},{"location":"ide-exi-pro/#visual-tutorial","text":"","title":"Visual tutorial"},{"location":"ide-keyboard/","text":"Keyboard shortcuts Supported keyboard shortcuts The following table shows the complete list of keyboard shortcuts supported by ITL IDE: Action Keyboard shortcut Action result Help F1 The help window appears. New project Ctrl + N The new project opens. Open project Ctrl + O The exsisting project loads. Save project Ctrl + S Current active project is saved. Save poject as Ctrl + Alt + S Save file as dialoge is opened. Clear text in code editor Ctrl + D Code editor text is cleared. Cut Ctrl + X The selected text is transefered to a clipboard. Copy Ctrl + C The selected text is copied to a clipboard. Paste Ctrl + V Copied text from a clipboard i pasted. Undo Ctrl + Z The last user action is undoed. Redo Ctrl + Y The last user action is redoed. Exit Alt + F4 Exits the ITL IDE.","title":"Keyboard shortcuts"},{"location":"ide-keyboard/#keyboard-shortcuts","text":"","title":"Keyboard shortcuts"},{"location":"ide-keyboard/#supported-keyboard-shortcuts","text":"The following table shows the complete list of keyboard shortcuts supported by ITL IDE: Action Keyboard shortcut Action result Help F1 The help window appears. New project Ctrl + N The new project opens. Open project Ctrl + O The exsisting project loads. Save project Ctrl + S Current active project is saved. Save poject as Ctrl + Alt + S Save file as dialoge is opened. Clear text in code editor Ctrl + D Code editor text is cleared. Cut Ctrl + X The selected text is transefered to a clipboard. Copy Ctrl + C The selected text is copied to a clipboard. Paste Ctrl + V Copied text from a clipboard i pasted. Undo Ctrl + Z The last user action is undoed. Redo Ctrl + Y The last user action is redoed. Exit Alt + F4 Exits the ITL IDE.","title":"Supported keyboard shortcuts"},{"location":"ide-new-pro/","text":"Creating a new project Visual tutorial","title":"Creating a new project"},{"location":"ide-new-pro/#creating-a-new-project","text":"","title":"Creating a new project"},{"location":"ide-new-pro/#visual-tutorial","text":"","title":"Visual tutorial"},{"location":"ide-run/","text":"Running code Visual tutorial","title":"Running the code"},{"location":"ide-run/#running-code","text":"","title":"Running code"},{"location":"ide-run/#visual-tutorial","text":"","title":"Visual tutorial"},{"location":"ide-sav-pro/","text":"Saving project Visual tutorial","title":"Saving a project"},{"location":"ide-sav-pro/#saving-project","text":"","title":"Saving project"},{"location":"ide-sav-pro/#visual-tutorial","text":"","title":"Visual tutorial"},{"location":"ide/","text":"The ITL Development Studio Introduction IDL Develoment Studio was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports. Supported features IDL's integrated development environment supports following features: File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of the execution result Automated populating of editor\u2019s text box with the code pattern Keyboard shortcuts Debugging The first example of syntax error shows an improperly written code (user pressed the run button without finishing the assessment code). IDE prints the error contents in the IDL's terminal. The second example of syntax error shows a misspelled variable name E_bannk (it should have been E_bank ). IDE visually marks the error and prints its contents in the IDL's terminal. The third example of syntax error shows a misspelled instruction name mettrics (it should have been metrics ) IDE visually marks the error and prints its contents in the IDL's terminal with an error line number.","title":"Introduction"},{"location":"ide/#the-itl-development-studio","text":"","title":"The ITL Development Studio"},{"location":"ide/#introduction","text":"IDL Develoment Studio was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports.","title":"Introduction"},{"location":"ide/#supported-features","text":"IDL's integrated development environment supports following features: File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of the execution result Automated populating of editor\u2019s text box with the code pattern Keyboard shortcuts","title":"Supported features"},{"location":"ide/#debugging","text":"The first example of syntax error shows an improperly written code (user pressed the run button without finishing the assessment code). IDE prints the error contents in the IDL's terminal. The second example of syntax error shows a misspelled variable name E_bannk (it should have been E_bank ). IDE visually marks the error and prints its contents in the IDL's terminal. The third example of syntax error shows a misspelled instruction name mettrics (it should have been metrics ) IDE visually marks the error and prints its contents in the IDL's terminal with an error line number.","title":"Debugging"},{"location":"install/","text":"Installation Downloading and starting up ITL Development Studio In order to run ITL Development Studio on your computer download: Python IDLE editor from its official website. Run following commands in the terminal to install Python dependencies: pip install numpy pandas matplotlib skfuzzy lark xlsxwriter xhtml2pdf Download ITL master repository from [here.] (https://github.com/matejavulic/improvement-tracking-language) Unpack master archive and open IDLE. Within IDLE load Implementation/main.py. Launch ITL IDE by pressing F5 .","title":"Installation"},{"location":"install/#installation","text":"","title":"Installation"},{"location":"install/#downloading-and-starting-up-itl-development-studio","text":"In order to run ITL Development Studio on your computer download: Python IDLE editor from its official website. Run following commands in the terminal to install Python dependencies: pip install numpy pandas matplotlib skfuzzy lark xlsxwriter xhtml2pdf Download ITL master repository from [here.] (https://github.com/matejavulic/improvement-tracking-language) Unpack master archive and open IDLE. Within IDLE load Implementation/main.py. Launch ITL IDE by pressing F5 .","title":"Downloading and starting up ITL Development Studio"},{"location":"purpose/","text":"Intended use and purpose General purpose The purpose of the developed language is to provide the assessors with an easy way of assessing and visually displaying company performance metric ratings. Combining metrics Metrics can be taken from different business domains. For example, assessing user satisfaction metrics and financial performance metrics can be combined in order to get an overall assessment of the electronic banking web platform. Assessment methodology The assessment methodology is based on fuzzy membership functions. Upon completing the calculation, i.e. the assessment process of selected fuzzy metrics, the visual and numerical results are presented to the assessor. In the end, the assessor can investigate the assessment results both by investigating numerical results and investigating the graphical metrics representation.","title":"Intended use and purose"},{"location":"purpose/#intended-use-and-purpose","text":"","title":"Intended use and purpose"},{"location":"purpose/#general-purpose","text":"The purpose of the developed language is to provide the assessors with an easy way of assessing and visually displaying company performance metric ratings.","title":"General purpose"},{"location":"purpose/#combining-metrics","text":"Metrics can be taken from different business domains. For example, assessing user satisfaction metrics and financial performance metrics can be combined in order to get an overall assessment of the electronic banking web platform.","title":"Combining metrics"},{"location":"purpose/#assessment-methodology","text":"The assessment methodology is based on fuzzy membership functions. Upon completing the calculation, i.e. the assessment process of selected fuzzy metrics, the visual and numerical results are presented to the assessor. In the end, the assessor can investigate the assessment results both by investigating numerical results and investigating the graphical metrics representation.","title":"Assessment methodology"},{"location":"quick/","text":"Quick introduction One assessment methodology to rule them all In order to obtain a holistic view of the business performance degree, a universal assessment methodology is needed. The ITL performance system can help you create a science-backed-up methodology approach to measure and grade your business system performance. In this way, you can analytically track and measure the progress of your business KPIs and make corrective acts to improve them. Easy to learn even for non-professionals ITL's syntax is specially designed to be easy to learn for non-professionals. In the design process, a state-of-the-art user experience methodology was used. Powerful graphic reports and easy-to-grasp performance rate People focus on what they see. So, in order to maximize the power of business reporting, we made a powerful graphic reporting system so you can easily understand the results of the assessments. Backed-up with science This project is a result of research, adaptation, and implementation of the scientific models proposed by Omogbai, Farzad and Pakdil. Besides that, the Fuzzy set theory, on which this system is based, was implemented according to the research proposals made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Quick introduction"},{"location":"quick/#quick-introduction","text":"","title":"Quick introduction"},{"location":"quick/#one-assessment-methodology-to-rule-them-all","text":"In order to obtain a holistic view of the business performance degree, a universal assessment methodology is needed. The ITL performance system can help you create a science-backed-up methodology approach to measure and grade your business system performance. In this way, you can analytically track and measure the progress of your business KPIs and make corrective acts to improve them.","title":"One assessment methodology to rule them all"},{"location":"quick/#easy-to-learn-even-for-non-professionals","text":"ITL's syntax is specially designed to be easy to learn for non-professionals. In the design process, a state-of-the-art user experience methodology was used.","title":"Easy to learn even for non-professionals"},{"location":"quick/#powerful-graphic-reports-and-easy-to-grasp-performance-rate","text":"People focus on what they see. So, in order to maximize the power of business reporting, we made a powerful graphic reporting system so you can easily understand the results of the assessments.","title":"Powerful graphic reports and easy-to-grasp performance rate"},{"location":"quick/#backed-up-with-science","text":"This project is a result of research, adaptation, and implementation of the scientific models proposed by Omogbai, Farzad and Pakdil. Besides that, the Fuzzy set theory, on which this system is based, was implemented according to the research proposals made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Backed-up with science"},{"location":"release-ide/","text":"Release notes - ITL Development Studio 1.1.1 _ September 25, 2020 Dodat broj verzije ITL-a u About sekciji Promenenjen naziv IDE-a u ITL Development Studio Promenjena po\u010detna veli\u010dina prozora na 700x500 piksela 1.1.0 _ September 24, 2020 Dodat broj verzije ITL-a u About sekciji Promenenjen naziv IDE-a u ITL Development Studio Dodato automatsko ispisivanje trenutne verzije jezika ITL kao broj verzije Development Studija Zna\u010dajnije izmene u organizaciji glavne klase IDE-a, dodate dve nove klase za treding i ozna\u010davanje sintakse teksta Implementirani tagovi sa regex-om za ozna\u010davanje sintakse predefinisanim bojama Implementirana klasa koja nasle\u0111uje osnovnu klasu Text sa metodom za primenu tagova na trenutni kod u tekst editoru Implementacije klase za pokretanje neblokiraju\u0107eg paralelnog procesa sa zadatkom da na svaku 1ms proverava tekst i da prema regex pravilima vizuelno ozna\u010dava sintaksu Zna\u010dajne izmene u vizuelnom izgledu aplikacije: promenjene boje prozora promenjen font i veli\u010dina teksta promenjena boja linije za ozna\u010davanje sintakti\u010dkih gre\u0161aka, promenjena boja selektovanog teksta sa i bez aktivnog fokusa promenjena boja kursora i ikonica kursora kada se nalazi iznad kliza\u010da dodata nova paleta boja za ozna\u010dvanje sintakse promenjena boja menija 1.0.1 _ June 7, 2020 Promenjen paker prozora, umesto pack-a koristi se grid Refaktorisanje koda zadu\u017eenog za pakovanje vid\u017eeta aplikacije. Dodata funkcija i meni dugme za otvaranje online dokumentacije Dodat pomo\u0107ni meni koji se otvara pritiskom na desni klik Dodati akceleratori za svaku stavku menija Dodat automatski fokus u polju tekst editora Ispravljena gre\u0161ka formiranja tre\u0107eg polja grid sitema koje se ne koristi Manje vizuelne izmene u meniju aplikacije Dodata dugmad - pre\u010dice za korak napred-nazad u traci menija aplikacije 1.0.0 _ April 3, 2020 Implementiran integrisani terminal Implementirano novo automatsko definisanje koda kada korisnik otvori nov prazan fajl Dodate tasterske pre\u010dice za sve osnovne komande Dodata ikonica ITL-a u uglu prozora Dodato automatsko menjanje naziva u\u010ditanog fajla u traci prozora Dodata opcija brisanja svog unetog teksta Dodata tasterska pre\u010dica za brisanje svog unetog teksta Dodata opcija za izlazak iz programa sa tasterskom pre\u010dicom Ispravljena gre\u0161ka neresponzivnog pona\u0161anja vid\u017eeta na promenu veli\u010dine prozora Ispravljena gre\u0161ka terminiranja aplikacije kada korisnik pokrene kod a kod nije unesen Manje izmene u prikazu fonta, njegovoj vei\u010dini Izmenjen po\u010detni kod u aplikaciji (pomo\u0107 korisniku prilikom pokretanja aplikacije) Pobolj\u0161an meni za otvaranje fajlova (dodata podr\u0161ka za .itl format) Pobolj\u0161an meni za \u010duvanje fajlova (dodata podr\u0161ka za .itl format) Obra\u0111ena gre\u0161ka lexc.UnexpectedEOF sa odgovaraju\u0107om razumljivom porukom za korisnika Refaktorisan kod za hvatanje generalne gre\u0161ke Definisana nova po\u010detna veli\u010dina prozora na 600x400 piksela 0.1.3 _ March 13, 2020 Implemetriano inicijalno pra\u0107enje gre\u0161aka Implemetirano ozna\u010davanje crvenom linijom sintakti\u010dke gre\u0161ke Implementirana opcija prikrivanja trace-a (DEBUG opcija) Implementirano automatsko ispisivanje po\u010detnog koda Manje izmene u na\u010dinu ispisa informacija u terminalu 0.1.2 _ February 25, 2020 Implementiran mini debager Dodate simboli\u010dke precice za izvr\u0161avanje koda Dodate pre\u010dice za napred/nazad Dodato obave\u0161tenje o verziji IDE-a i ITL-a Dodati kliza\u010di za terminal i tekst editor Dodat nov za\u0161titni znak 0.1.1 _ February 11, 2020 Manje refaktorisanje koda Dodata trka gornjeg menija sa opcijama File, Edit, Help Implementirane opcije za korak nazad/napred 0.1.0 _ February 3, 2020 Initial release","title":"ITL DS release notes"},{"location":"release-ide/#release-notes-itl-development-studio","text":"","title":"Release notes - ITL Development Studio"},{"location":"release-ide/#111-_-september-25-2020","text":"Dodat broj verzije ITL-a u About sekciji Promenenjen naziv IDE-a u ITL Development Studio Promenjena po\u010detna veli\u010dina prozora na 700x500 piksela","title":"1.1.1 _ September 25, 2020"},{"location":"release-ide/#110-_-september-24-2020","text":"Dodat broj verzije ITL-a u About sekciji Promenenjen naziv IDE-a u ITL Development Studio Dodato automatsko ispisivanje trenutne verzije jezika ITL kao broj verzije Development Studija Zna\u010dajnije izmene u organizaciji glavne klase IDE-a, dodate dve nove klase za treding i ozna\u010davanje sintakse teksta Implementirani tagovi sa regex-om za ozna\u010davanje sintakse predefinisanim bojama Implementirana klasa koja nasle\u0111uje osnovnu klasu Text sa metodom za primenu tagova na trenutni kod u tekst editoru Implementacije klase za pokretanje neblokiraju\u0107eg paralelnog procesa sa zadatkom da na svaku 1ms proverava tekst i da prema regex pravilima vizuelno ozna\u010dava sintaksu Zna\u010dajne izmene u vizuelnom izgledu aplikacije: promenjene boje prozora promenjen font i veli\u010dina teksta promenjena boja linije za ozna\u010davanje sintakti\u010dkih gre\u0161aka, promenjena boja selektovanog teksta sa i bez aktivnog fokusa promenjena boja kursora i ikonica kursora kada se nalazi iznad kliza\u010da dodata nova paleta boja za ozna\u010dvanje sintakse promenjena boja menija","title":"1.1.0 _ September 24, 2020"},{"location":"release-ide/#101-_-june-7-2020","text":"Promenjen paker prozora, umesto pack-a koristi se grid Refaktorisanje koda zadu\u017eenog za pakovanje vid\u017eeta aplikacije. Dodata funkcija i meni dugme za otvaranje online dokumentacije Dodat pomo\u0107ni meni koji se otvara pritiskom na desni klik Dodati akceleratori za svaku stavku menija Dodat automatski fokus u polju tekst editora Ispravljena gre\u0161ka formiranja tre\u0107eg polja grid sitema koje se ne koristi Manje vizuelne izmene u meniju aplikacije Dodata dugmad - pre\u010dice za korak napred-nazad u traci menija aplikacije","title":"1.0.1 _ June 7, 2020"},{"location":"release-ide/#100-_-april-3-2020","text":"Implementiran integrisani terminal Implementirano novo automatsko definisanje koda kada korisnik otvori nov prazan fajl Dodate tasterske pre\u010dice za sve osnovne komande Dodata ikonica ITL-a u uglu prozora Dodato automatsko menjanje naziva u\u010ditanog fajla u traci prozora Dodata opcija brisanja svog unetog teksta Dodata tasterska pre\u010dica za brisanje svog unetog teksta Dodata opcija za izlazak iz programa sa tasterskom pre\u010dicom Ispravljena gre\u0161ka neresponzivnog pona\u0161anja vid\u017eeta na promenu veli\u010dine prozora Ispravljena gre\u0161ka terminiranja aplikacije kada korisnik pokrene kod a kod nije unesen Manje izmene u prikazu fonta, njegovoj vei\u010dini Izmenjen po\u010detni kod u aplikaciji (pomo\u0107 korisniku prilikom pokretanja aplikacije) Pobolj\u0161an meni za otvaranje fajlova (dodata podr\u0161ka za .itl format) Pobolj\u0161an meni za \u010duvanje fajlova (dodata podr\u0161ka za .itl format) Obra\u0111ena gre\u0161ka lexc.UnexpectedEOF sa odgovaraju\u0107om razumljivom porukom za korisnika Refaktorisan kod za hvatanje generalne gre\u0161ke Definisana nova po\u010detna veli\u010dina prozora na 600x400 piksela","title":"1.0.0 _ April 3, 2020"},{"location":"release-ide/#013-_-march-13-2020","text":"Implemetriano inicijalno pra\u0107enje gre\u0161aka Implemetirano ozna\u010davanje crvenom linijom sintakti\u010dke gre\u0161ke Implementirana opcija prikrivanja trace-a (DEBUG opcija) Implementirano automatsko ispisivanje po\u010detnog koda Manje izmene u na\u010dinu ispisa informacija u terminalu","title":"0.1.3 _ March 13, 2020"},{"location":"release-ide/#012-_-february-25-2020","text":"Implementiran mini debager Dodate simboli\u010dke precice za izvr\u0161avanje koda Dodate pre\u010dice za napred/nazad Dodato obave\u0161tenje o verziji IDE-a i ITL-a Dodati kliza\u010di za terminal i tekst editor Dodat nov za\u0161titni znak","title":"0.1.2 _ February 25, 2020"},{"location":"release-ide/#011-_-february-11-2020","text":"Manje refaktorisanje koda Dodata trka gornjeg menija sa opcijama File, Edit, Help Implementirane opcije za korak nazad/napred","title":"0.1.1 _ February 11, 2020"},{"location":"release-ide/#010-_-february-3-2020","text":"Initial release","title":"0.1.0 _ February 3, 2020"},{"location":"release-itl/","text":"Release notes - ITL Core 1.1.0 _ September 27, 2020 Ispravljena gre\u0161ka u gramatici sintakse za naredbu grade cumulative (broj parametara mora da bude ta\u010dno dva) Implementiran nov oblik internog modela objekta u kome se \u010duvaju podaci metrike. Uvedena standardizovana polja \"type\" i \"data\" za svaki tip metrike Definisane nove vrste fazi metrika sa opcionim parametrom \"-\" : fazi trapezoidna funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi trougaona funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi Gaus 1 funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi Gaus 2 funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi sigmoidna funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti implementirana nova funkcija za pripremu podataka za ra\u010dunanje linearne fazi funkcije pripadnosti Definisana nova funkcija za ra\u010dunanje prose\u010dne vrednosti ocena metrika unutar jednog skupa metrika Definisana nova funkcija za ra\u010dunanje prose\u010dne vrednosti ocena skupova metrika Refaktorisan deo koda zadu\u017een za formiranje objekata metrike. Napisane nove metode za obradu sintakti\u010dkih naredbi: metod grade za naredbu grade metod gradeCumul za naredbu grade cumulative metod gradeComp za naredbu grade comparative nova opcija ispisa bolje ocene za date metrike (izra\u017eeno u procentima i poenima) metod gradeSing za naredbu grade singular nova opcija ispisa rang liste skupova metrika obuhva\u0107enih ocenjivanjem Zbog promene strukture objekta internog modela objekta metrika izmenjen i refaktorisan deo koda zadu\u017een za unos izra\u010dunatih metrika u Excel datoteku Prilago\u0111ena funkcija za iscrtavanje metrike zbog nove strukture internog objekta metrike Manje grafi\u010dke korekcije funkcija za iscrtavanje linearnih fazi funkcija Manje izmene formatiranja ispisa rezultata procene u terminalu 1.0.2 _ September 22, 2020 Implementirano Excel izve\u0161tavanje - sve metrike i rezultati procene sada mogu da se sa\u010duvaju u Excel datoteci Dodata nova sintakti\u010dka naredba za Excel izve\u0161tavanje make excel report Promenjene boje grafika Svi moduli vezani za rad ITL jezika sada zbirno nose naziv ITL Core 1.0.1 _ September 15, 2020 Implementirane pre\u010dice na tastaturi Izrada mre\u017ene dokumentacije 1.0.0 _ August 7, 2020 Izra\u0111eno korisni\u010dkog uputstvo sa dokumentacijom Preure\u0111ena interna struktura ITL IDE-a 0.1.4 _ June 2, 2020 Implemetriani graficki izve\u0161taji 0.1.3 _ March 19, 2020 Implemetriana pojedina\u010dna ocena unetog skupa metrika definiana nova sintakti\u010dka naredba grade Implementiran grafi\u010dki prikaz \u017eeljene karakteristike metrike definisana nova sintakti\u010dka naredba draw metric <metric_name>? from <matric_set> Implemetriana zbirna ocena unetog skupa metrika definiana nova sintakti\u010dka naredba grade comparative Implemetriana kumulativna ocena za \u017eeljene skupove metrika definiana nova sintakti\u010dka naredba grade cumulative 0.1.2 _ February 21, 2020 Implementiran grafi\u010dki prikaz radarskog grafika automatski prikaz vrednosti za trenutnu metriku sa vizuelnim ozna\u010davanjem prvi nivo vizuelnog ozna\u010davanja - zeleno (od 70 bodova do 100 bodova) drugi nivo vizuelnog ozna\u010davanja - narand\u017easto (od 40 bodova do 70 bodova) tre\u0107i nivo vizuelnog ozna\u010davanja - crveno (od 0 bodova do 40 bodova) Implemetrian fazi tip 2 grafik Implemetriana fazi tip 2 funkcija 0.1.1 _ February 11, 2020 Imlementiran fazi 1 grafik Implementirana fazi 1 funkcija Pobolj\u0161ana sintaksa ITL-a refaktorisana gramatika implementirano ocenjivanje vise izvestaja 0.1.0 _ February 3, 2020 Initial release","title":"ITL Core release notes"},{"location":"release-itl/#release-notes-itl-core","text":"","title":"Release notes - ITL Core"},{"location":"release-itl/#110-_-september-27-2020","text":"Ispravljena gre\u0161ka u gramatici sintakse za naredbu grade cumulative (broj parametara mora da bude ta\u010dno dva) Implementiran nov oblik internog modela objekta u kome se \u010duvaju podaci metrike. Uvedena standardizovana polja \"type\" i \"data\" za svaki tip metrike Definisane nove vrste fazi metrika sa opcionim parametrom \"-\" : fazi trapezoidna funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi trougaona funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi Gaus 1 funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi Gaus 2 funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti fazi sigmoidna funkcija implementirana funkcija za pripremu podataka i ra\u010dunanje fazi funkcije pripadnosti implementirana nova funkcija za pripremu podataka za ra\u010dunanje linearne fazi funkcije pripadnosti Definisana nova funkcija za ra\u010dunanje prose\u010dne vrednosti ocena metrika unutar jednog skupa metrika Definisana nova funkcija za ra\u010dunanje prose\u010dne vrednosti ocena skupova metrika Refaktorisan deo koda zadu\u017een za formiranje objekata metrike. Napisane nove metode za obradu sintakti\u010dkih naredbi: metod grade za naredbu grade metod gradeCumul za naredbu grade cumulative metod gradeComp za naredbu grade comparative nova opcija ispisa bolje ocene za date metrike (izra\u017eeno u procentima i poenima) metod gradeSing za naredbu grade singular nova opcija ispisa rang liste skupova metrika obuhva\u0107enih ocenjivanjem Zbog promene strukture objekta internog modela objekta metrika izmenjen i refaktorisan deo koda zadu\u017een za unos izra\u010dunatih metrika u Excel datoteku Prilago\u0111ena funkcija za iscrtavanje metrike zbog nove strukture internog objekta metrike Manje grafi\u010dke korekcije funkcija za iscrtavanje linearnih fazi funkcija Manje izmene formatiranja ispisa rezultata procene u terminalu","title":"1.1.0 _ September 27, 2020"},{"location":"release-itl/#102-_-september-22-2020","text":"Implementirano Excel izve\u0161tavanje - sve metrike i rezultati procene sada mogu da se sa\u010duvaju u Excel datoteci Dodata nova sintakti\u010dka naredba za Excel izve\u0161tavanje make excel report Promenjene boje grafika Svi moduli vezani za rad ITL jezika sada zbirno nose naziv ITL Core","title":"1.0.2 _ September 22, 2020"},{"location":"release-itl/#101-_-september-15-2020","text":"Implementirane pre\u010dice na tastaturi Izrada mre\u017ene dokumentacije","title":"1.0.1 _ September 15, 2020"},{"location":"release-itl/#100-_-august-7-2020","text":"Izra\u0111eno korisni\u010dkog uputstvo sa dokumentacijom Preure\u0111ena interna struktura ITL IDE-a","title":"1.0.0 _  August 7, 2020"},{"location":"release-itl/#014-_-june-2-2020","text":"Implemetriani graficki izve\u0161taji","title":"0.1.4 _ June 2, 2020"},{"location":"release-itl/#013-_-march-19-2020","text":"Implemetriana pojedina\u010dna ocena unetog skupa metrika definiana nova sintakti\u010dka naredba grade Implementiran grafi\u010dki prikaz \u017eeljene karakteristike metrike definisana nova sintakti\u010dka naredba draw metric <metric_name>? from <matric_set> Implemetriana zbirna ocena unetog skupa metrika definiana nova sintakti\u010dka naredba grade comparative Implemetriana kumulativna ocena za \u017eeljene skupove metrika definiana nova sintakti\u010dka naredba grade cumulative","title":"0.1.3 _ March 19, 2020"},{"location":"release-itl/#012-_-february-21-2020","text":"Implementiran grafi\u010dki prikaz radarskog grafika automatski prikaz vrednosti za trenutnu metriku sa vizuelnim ozna\u010davanjem prvi nivo vizuelnog ozna\u010davanja - zeleno (od 70 bodova do 100 bodova) drugi nivo vizuelnog ozna\u010davanja - narand\u017easto (od 40 bodova do 70 bodova) tre\u0107i nivo vizuelnog ozna\u010davanja - crveno (od 0 bodova do 40 bodova) Implemetrian fazi tip 2 grafik Implemetriana fazi tip 2 funkcija","title":"0.1.2 _ February 21, 2020"},{"location":"release-itl/#011-_-february-11-2020","text":"Imlementiran fazi 1 grafik Implementirana fazi 1 funkcija Pobolj\u0161ana sintaksa ITL-a refaktorisana gramatika implementirano ocenjivanje vise izvestaja","title":"0.1.1 _ February 11, 2020"},{"location":"release-itl/#010-_-february-3-2020","text":"Initial release","title":"0.1.0 _ February 3, 2020"},{"location":"syntax/","text":"Syntax Assessment structure The following excerpt shows the syntax of the ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. assessment+ \"Assessment Title\" { metrics+ Metric_set_1 { Metric_linear1+ = (v,a,b), if a<b Metric_linear2+ = (v,b,a), if b>a Metric_trapezoid1+ = trapezoid(v,a,b,c,d) Metric_trapezoid2+ = trapezoid(\"-\",v,a,b,c,d) Metric_triangle1+ = triangle(v,a,b,c) Metric_triangle2+ = trinagle(\"-\",v,a,b,c) Metric_gauss1+ = gauss(v,a,b) Metric_gauss2+ = gauss(\"-\",v,a,b) Metric_gauss21+ = gauss2(v,a,b,c,d) Metric_gauss22+ = gauss2(\"-\",v,a,b,c,d) Metric_sigmoid1+ = sigmoid(v,a,b) Metric_sigmoid2+ = sigmoid(\"-\",v,a,b) } # comment print Metric_set_1+; grade Metric_set_1; # Metric_linear1&2 currently supported draw metric Metric_1+ from Metric_set_1; grade comparative Metric_set_1, Metric_set_2; grade cumulative Metric_set_1+; grade singular Metric_set_1+; make excel report \"Excel Report Title\"; } Syntax reference assessment STRING The assessment object creating instruction. Type : Instruction Identifier : @assess_obj 1st parent: None 1st child: @metrics_set Parameters: STRING : string Defines the assesment report title. Returns: None Limitations: None assessment STRING example Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { } } Result: > Code successufully executed. metrics NAME The metrics set object creating instruction. Type : Instruction Identifier : @metrics_set 1st parent: @assess_obj 1st child: @metric Parameters: NAME : @var_metric_set Metric set variable. Returns: None Limitations: None metrics NAME example Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { } } Result: > Code successufully executed. @var_metric_set The @metrics_set variable containing the @metric_var instances. Type : Variable Identifier : @var_metric_set 1st parent: @metrics_set 1st child: None Parameters: Any letter or digit combination excluding keywords and whitespace. Cannot start with the digit either. Returns: None Limitations: None @var_metric_set example Proper varible names: metrName , ebank1 , Metr_1_ebank1 Improper variable names: 1MetricName , Metric name , metric Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { example_metr_1 = (1,1,1) } print Example_Metric_Set; metrics Example_Metric_Set { example_metr_1 = (3,2,13) } print Example_Metric_Set; } Result: > Metric sets values: _____________________ Metric: Example_Metric_Set Values: {'example_metr_1': {'type': 'linear', 'data': {0: Token(NUMBER, '1'), 1: Token(NUMBER, '1'), 2: Token(NUMBER, '1')}}} > Metric sets values: _____________________ Metric: Example_Metric_Set Values: {'example_metr_1': {'type': 'linear', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '2'), 2: Token(NUMBER, '13')}}} > Code successufully executed. Notice The development of the documentation section is in progress.","title":"Syntax"},{"location":"syntax/#syntax","text":"","title":"Syntax"},{"location":"syntax/#assessment-structure","text":"The following excerpt shows the syntax of the ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. assessment+ \"Assessment Title\" { metrics+ Metric_set_1 { Metric_linear1+ = (v,a,b), if a<b Metric_linear2+ = (v,b,a), if b>a Metric_trapezoid1+ = trapezoid(v,a,b,c,d) Metric_trapezoid2+ = trapezoid(\"-\",v,a,b,c,d) Metric_triangle1+ = triangle(v,a,b,c) Metric_triangle2+ = trinagle(\"-\",v,a,b,c) Metric_gauss1+ = gauss(v,a,b) Metric_gauss2+ = gauss(\"-\",v,a,b) Metric_gauss21+ = gauss2(v,a,b,c,d) Metric_gauss22+ = gauss2(\"-\",v,a,b,c,d) Metric_sigmoid1+ = sigmoid(v,a,b) Metric_sigmoid2+ = sigmoid(\"-\",v,a,b) } # comment print Metric_set_1+; grade Metric_set_1; # Metric_linear1&2 currently supported draw metric Metric_1+ from Metric_set_1; grade comparative Metric_set_1, Metric_set_2; grade cumulative Metric_set_1+; grade singular Metric_set_1+; make excel report \"Excel Report Title\"; }","title":"Assessment structure"},{"location":"syntax/#syntax-reference","text":"","title":"Syntax reference"},{"location":"syntax/#assessment-string","text":"The assessment object creating instruction. Type : Instruction Identifier : @assess_obj 1st parent: None 1st child: @metrics_set Parameters: STRING : string Defines the assesment report title. Returns: None Limitations: None assessment STRING example Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { } } Result: > Code successufully executed.","title":"assessment STRING"},{"location":"syntax/#metrics-name","text":"The metrics set object creating instruction. Type : Instruction Identifier : @metrics_set 1st parent: @assess_obj 1st child: @metric Parameters: NAME : @var_metric_set Metric set variable. Returns: None Limitations: None metrics NAME example Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { } } Result: > Code successufully executed.","title":"metrics NAME"},{"location":"syntax/#var_metric_set","text":"The @metrics_set variable containing the @metric_var instances. Type : Variable Identifier : @var_metric_set 1st parent: @metrics_set 1st child: None Parameters: Any letter or digit combination excluding keywords and whitespace. Cannot start with the digit either. Returns: None Limitations: None @var_metric_set example Proper varible names: metrName , ebank1 , Metr_1_ebank1 Improper variable names: 1MetricName , Metric name , metric Code: assessment \"Example Report Title\" { metrics Example_Metric_Set { example_metr_1 = (1,1,1) } print Example_Metric_Set; metrics Example_Metric_Set { example_metr_1 = (3,2,13) } print Example_Metric_Set; } Result: > Metric sets values: _____________________ Metric: Example_Metric_Set Values: {'example_metr_1': {'type': 'linear', 'data': {0: Token(NUMBER, '1'), 1: Token(NUMBER, '1'), 2: Token(NUMBER, '1')}}} > Metric sets values: _____________________ Metric: Example_Metric_Set Values: {'example_metr_1': {'type': 'linear', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '2'), 2: Token(NUMBER, '13')}}} > Code successufully executed.","title":"@var_metric_set"},{"location":"syntax/#notice","text":"The development of the documentation section is in progress.","title":"Notice"},{"location":"tutorial-advanced/","text":"Advanced tutorial Introduction This advanced tutorial will guide you through the basic ITL capabilites. For the sake of demonstration, we will assess the perfomance metrics of the three digital products used by three different banks operating under a single bank group. The bank names are going to be as follows: E_bank_1 , E_bank_2 , and E_bank_3 . Of course, when we speak about digital products, it is implied that we speak of e-banking web applications. What are we going to measure and assess? We will define five metrics that will be used within this evaluation system. The metric scores are calculated using the Python Skfuzzy Library. Metrics definitions (monitored on a monthly basis): Metric 1: Number of complaints Definition: The number of users' complaints about the web application performance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5 Metric 2: Loan lead time Definition: The average amount of time that passes between application submission and loan approval Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 days Acceptable value (a) 15 days Metric 3: Number of the approved loans Definition: The number of approved loans Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 500 Acceptable value (a) 30 Metric 4: Application screen time Definition: The average period of time a user spends using the web application on a daily basis Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min Metric 5: Newly issued credit cards Definition: The number of newly issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs. Assessment code report \"June Performance Assessment Report - E-bank Group\" { # We define sets of metrics for all three banks metrics E_bank_1 { # Defining the Complaints metric Compl = (3,20,5) New_Credit_Cards = (218, 100, 400) Screen_Time = (7.4, 1, 15) New_Loans = (305,30,500) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = (1,20,5) New_Credit_Cards = (295, 100, 400) Screen_Time = (4.9, 1, 15) New_Loans = (352,30,500) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = (4,20,5) New_Credit_Cards = (191, 100, 400) Screen_Time = (9.5, 1, 15) New_Loans = (254,30,500) Loan_Lead_Time = (2.52,30,15) } # Print out the overall grade of all three banks grade cumulative E_bank_1,E_bank_2,E_bank_3; # Individually assess the grades of each bank grade singular E_bank_1, E_bank_2, E_bank_3; # The third bank got the worst grade. # Let us examine why: grade E_bank_3; # The third bank made the worst result for metrics Compl # and New_Credit_Cards. Let us draw them so we # can examine them better: draw metric Compl, New_Credit_Cards from E_bank_3; # At the end, we will compare the overall success # of the first and second bank: grade comparative E_bank_1, E_bank_2; # In order to print all the original metrics data # we can use the following instruction: print E_bank_1, E_bank_2, E_bank_3; } What are we going to get from the assessment? Numerical result Cumulative grade: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}, 'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}, 'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 52/100 points Individual grades: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}} Grade: 51/100 points Metric: {'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}} Grade: 57/100 points Metric: {'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 48/100 points Metric grade: Metric: {'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 48/100 points Drawing metrics: E_bank_3 Compl 20.0 New_Credit_Cards 30.333 Comparative grades: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}, 'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}} Grade: 54/100 points Metric values: Metric: E_bank_1 Values: {'Compl': {0: 3.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 218.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 7.4, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 305.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 4.43, 1: 30.0, 2: 15.0}} Metric: E_bank_2 Values: {'Compl': {0: 1.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 295.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 4.9, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 352.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 8.82, 1: 30.0, 2: 15.0}} Metric: E_bank_3 Values: {'Compl': {0: 4.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 191.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 9.5, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 254.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 2.52, 1: 30.0, 2: 15.0}} > Code successufully executed. Radar chart Comparative radar chart Fuzzy metric - Type 1 Fuzzy metric - Type 2 Discussion This documentation paragraph will be available soon.","title":"Advanced tutorial"},{"location":"tutorial-advanced/#advanced-tutorial","text":"","title":"Advanced tutorial"},{"location":"tutorial-advanced/#introduction","text":"This advanced tutorial will guide you through the basic ITL capabilites. For the sake of demonstration, we will assess the perfomance metrics of the three digital products used by three different banks operating under a single bank group. The bank names are going to be as follows: E_bank_1 , E_bank_2 , and E_bank_3 . Of course, when we speak about digital products, it is implied that we speak of e-banking web applications.","title":"Introduction"},{"location":"tutorial-advanced/#what-are-we-going-to-measure-and-assess","text":"We will define five metrics that will be used within this evaluation system. The metric scores are calculated using the Python Skfuzzy Library. Metrics definitions (monitored on a monthly basis):","title":"What are we going to measure and assess?"},{"location":"tutorial-advanced/#metric-1-number-of-complaints","text":"Definition: The number of users' complaints about the web application performance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5","title":"Metric 1: Number of complaints"},{"location":"tutorial-advanced/#metric-2-loan-lead-time","text":"Definition: The average amount of time that passes between application submission and loan approval Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 days Acceptable value (a) 15 days","title":"Metric 2: Loan lead time"},{"location":"tutorial-advanced/#metric-3-number-of-the-approved-loans","text":"Definition: The number of approved loans Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 500 Acceptable value (a) 30","title":"Metric 3: Number of the approved loans"},{"location":"tutorial-advanced/#metric-4-application-screen-time","text":"Definition: The average period of time a user spends using the web application on a daily basis Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min","title":"Metric 4: Application screen time"},{"location":"tutorial-advanced/#metric-5-newly-issued-credit-cards","text":"Definition: The number of newly issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs.","title":"Metric 5: Newly issued credit cards"},{"location":"tutorial-advanced/#assessment-code","text":"report \"June Performance Assessment Report - E-bank Group\" { # We define sets of metrics for all three banks metrics E_bank_1 { # Defining the Complaints metric Compl = (3,20,5) New_Credit_Cards = (218, 100, 400) Screen_Time = (7.4, 1, 15) New_Loans = (305,30,500) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = (1,20,5) New_Credit_Cards = (295, 100, 400) Screen_Time = (4.9, 1, 15) New_Loans = (352,30,500) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = (4,20,5) New_Credit_Cards = (191, 100, 400) Screen_Time = (9.5, 1, 15) New_Loans = (254,30,500) Loan_Lead_Time = (2.52,30,15) } # Print out the overall grade of all three banks grade cumulative E_bank_1,E_bank_2,E_bank_3; # Individually assess the grades of each bank grade singular E_bank_1, E_bank_2, E_bank_3; # The third bank got the worst grade. # Let us examine why: grade E_bank_3; # The third bank made the worst result for metrics Compl # and New_Credit_Cards. Let us draw them so we # can examine them better: draw metric Compl, New_Credit_Cards from E_bank_3; # At the end, we will compare the overall success # of the first and second bank: grade comparative E_bank_1, E_bank_2; # In order to print all the original metrics data # we can use the following instruction: print E_bank_1, E_bank_2, E_bank_3; }","title":"Assessment code"},{"location":"tutorial-advanced/#what-are-we-going-to-get-from-the-assessment","text":"","title":"What are we going to get from the assessment?"},{"location":"tutorial-advanced/#numerical-result","text":"Cumulative grade: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}, 'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}, 'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 52/100 points Individual grades: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}} Grade: 51/100 points Metric: {'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}} Grade: 57/100 points Metric: {'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 48/100 points Metric grade: Metric: {'E_bank_3': {'Compl': 20.0, 'New_Credit_Cards': 30.333, 'Screen_Time': 60.714, 'New_Loans': 47.66, 'Loan_Lead_Time': 83.2}} Grade: 48/100 points Drawing metrics: E_bank_3 Compl 20.0 New_Credit_Cards 30.333 Comparative grades: Metric: {'E_bank_1': {'Compl': 40.0, 'New_Credit_Cards': 39.333, 'Screen_Time': 45.714, 'New_Loans': 58.511, 'Loan_Lead_Time': 70.467}, 'E_bank_2': {'Compl': 80.0, 'New_Credit_Cards': 65.0, 'Screen_Time': 27.857, 'New_Loans': 68.511, 'Loan_Lead_Time': 41.2}} Grade: 54/100 points Metric values: Metric: E_bank_1 Values: {'Compl': {0: 3.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 218.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 7.4, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 305.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 4.43, 1: 30.0, 2: 15.0}} Metric: E_bank_2 Values: {'Compl': {0: 1.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 295.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 4.9, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 352.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 8.82, 1: 30.0, 2: 15.0}} Metric: E_bank_3 Values: {'Compl': {0: 4.0, 1: 20.0, 2: 5.0}, 'New_Credit_Cards': {0: 191.0, 1: 100.0, 2: 400.0}, 'Screen_Time': {0: 9.5, 1: 1.0, 2: 15.0}, 'New_Loans': {0: 254.0, 1: 30.0, 2: 500.0}, 'Loan_Lead_Time': {0: 2.52, 1: 30.0, 2: 15.0}} > Code successufully executed.","title":"Numerical result"},{"location":"tutorial-advanced/#radar-chart","text":"","title":"Radar chart"},{"location":"tutorial-advanced/#comparative-radar-chart","text":"","title":"Comparative radar chart"},{"location":"tutorial-advanced/#fuzzy-metric-type-1","text":"","title":"Fuzzy metric - Type 1"},{"location":"tutorial-advanced/#fuzzy-metric-type-2","text":"","title":"Fuzzy metric - Type 2"},{"location":"tutorial-advanced/#discussion","text":"This documentation paragraph will be available soon.","title":"Discussion"},{"location":"tutorial-intro/","text":"Beginner tutorial Introduction This beginner tutorial will guide you through the basic ITL capabilites. For the sake of demonstration, we will assess the perfomance metrics of the digital product used by a bank. The bank name is going to be E_bank . Of course, when we speak about digital products, it is implied that we speak of e-banking web application. What are we going to measure and assess? We will define three metrics that will be used within this evaluation system. Metrics definitions (monitored on a monthly basis): Metric 1: Number of complaints Definition: The number of users' complaints about the web application performance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5 Metric 2: Newly issued credit cards Definition: The number of newly issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs. Metric 3: Application screen time Definition: The average period of time a user spends using the web application on a daily basis Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min Assessment code report \"June Performance Assessment Report \u2014 E-Bank\" { # We define sets of metrics for the E-Bank metrics E_Bank { # Defining the Complaints metric Compl = (2,25,5) New_Credit_Cards = (369, 100, 400) Screen_Time = (7.4, 5, 15) } # Assess performance of the E-Bank grade E_Bank; } What are we going to get from the assessment? Numerical result Metric grade: Metric: {'E_Bank': {'Compl': 60.0, 'New_Credit_Cards': 89.667, 'Screen_Time': 24.0}} Grade: 58/100 points Radar chart Discussion This documentation paragraph will be available soon.","title":"Beginner tutorial"},{"location":"tutorial-intro/#beginner-tutorial","text":"","title":"Beginner tutorial"},{"location":"tutorial-intro/#introduction","text":"This beginner tutorial will guide you through the basic ITL capabilites. For the sake of demonstration, we will assess the perfomance metrics of the digital product used by a bank. The bank name is going to be E_bank . Of course, when we speak about digital products, it is implied that we speak of e-banking web application.","title":"Introduction"},{"location":"tutorial-intro/#what-are-we-going-to-measure-and-assess","text":"We will define three metrics that will be used within this evaluation system. Metrics definitions (monitored on a monthly basis):","title":"What are we going to measure and assess?"},{"location":"tutorial-intro/#metric-1-number-of-complaints","text":"Definition: The number of users' complaints about the web application performance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5","title":"Metric 1: Number of complaints"},{"location":"tutorial-intro/#metric-2-newly-issued-credit-cards","text":"Definition: The number of newly issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs.","title":"Metric 2: Newly issued credit cards"},{"location":"tutorial-intro/#metric-3-application-screen-time","text":"Definition: The average period of time a user spends using the web application on a daily basis Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min","title":"Metric 3: Application screen time"},{"location":"tutorial-intro/#assessment-code","text":"report \"June Performance Assessment Report \u2014 E-Bank\" { # We define sets of metrics for the E-Bank metrics E_Bank { # Defining the Complaints metric Compl = (2,25,5) New_Credit_Cards = (369, 100, 400) Screen_Time = (7.4, 5, 15) } # Assess performance of the E-Bank grade E_Bank; }","title":"Assessment code"},{"location":"tutorial-intro/#what-are-we-going-to-get-from-the-assessment","text":"","title":"What are we going to get from the assessment?"},{"location":"tutorial-intro/#numerical-result","text":"Metric grade: Metric: {'E_Bank': {'Compl': 60.0, 'New_Credit_Cards': 89.667, 'Screen_Time': 24.0}} Grade: 58/100 points","title":"Numerical result"},{"location":"tutorial-intro/#radar-chart","text":"","title":"Radar chart"},{"location":"tutorial-intro/#discussion","text":"This documentation paragraph will be available soon.","title":"Discussion"},{"location":"tutorial-multirepo/","text":"Multiple reports creating Introduction This documentation paragraph will be available soon. Assessment code assessment \"First report 1\" { metrics first_1 { first1 = (1,1,1) } metrics first_2 { first2 = triangle(3,2,4,6) } print first_1,first_2; make excel report \"First report\"; } assessment \"Second report 2\" { metrics second_1 { second1 = sigmoid(3,4,5) } metrics second_2 { second2 = (100,200,369) } print second_1,second_2; make excel report \"Second report\"; } What are we going to get from the assessments? Generated reports Created reports can be downloaded from here. Numerical result > Metric sets values: ____________________ Metric: first_1 Values: {'first1': {'type': 'linear', 'data': {0: Token(NUMBER, '1'), 1: Token(NUMBER, '1'), 2: Token(NUMBER, '1')}}} Metric: first_2 Values: {'first2': {'type': 'triangle', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '2'), 2: Token(NUMBER, '4'), 3: Token(NUMBER, '6')}}} > Metric sets values: ____________________ Metric: second_1 Values: {'second1': {'type': 'sigmoid', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '4'), 2: Token(NUMBER, '5')}}} Metric: second_2 Values: {'second2': {'type': 'linear', 'data': {0: Token(NUMBER, '100'), 1: Token(NUMBER, '200'), 2: Token(NUMBER, '369')}}} > Code successufully executed.","title":"Multiple reports creating"},{"location":"tutorial-multirepo/#multiple-reports-creating","text":"","title":"Multiple reports creating"},{"location":"tutorial-multirepo/#introduction","text":"This documentation paragraph will be available soon.","title":"Introduction"},{"location":"tutorial-multirepo/#assessment-code","text":"assessment \"First report 1\" { metrics first_1 { first1 = (1,1,1) } metrics first_2 { first2 = triangle(3,2,4,6) } print first_1,first_2; make excel report \"First report\"; } assessment \"Second report 2\" { metrics second_1 { second1 = sigmoid(3,4,5) } metrics second_2 { second2 = (100,200,369) } print second_1,second_2; make excel report \"Second report\"; }","title":"Assessment code"},{"location":"tutorial-multirepo/#what-are-we-going-to-get-from-the-assessments","text":"","title":"What are we going to get from the assessments?"},{"location":"tutorial-multirepo/#generated-reports","text":"Created reports can be downloaded from here.","title":"Generated reports"},{"location":"tutorial-multirepo/#numerical-result","text":"> Metric sets values: ____________________ Metric: first_1 Values: {'first1': {'type': 'linear', 'data': {0: Token(NUMBER, '1'), 1: Token(NUMBER, '1'), 2: Token(NUMBER, '1')}}} Metric: first_2 Values: {'first2': {'type': 'triangle', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '2'), 2: Token(NUMBER, '4'), 3: Token(NUMBER, '6')}}} > Metric sets values: ____________________ Metric: second_1 Values: {'second1': {'type': 'sigmoid', 'data': {0: Token(NUMBER, '3'), 1: Token(NUMBER, '4'), 2: Token(NUMBER, '5')}}} Metric: second_2 Values: {'second2': {'type': 'linear', 'data': {0: Token(NUMBER, '100'), 1: Token(NUMBER, '200'), 2: Token(NUMBER, '369')}}} > Code successufully executed.","title":"Numerical result"}]}