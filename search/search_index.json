{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Improvement Tracking Language - ITL Subscribe to our mailing list Description This is an implementation of the Internal DSL interpreted with Python. The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings. Features and detailed info Complete documentation with detailed list of features, internal organization and use cases is available in this online manual. Also, you can check out the PDF version of the user manual here. Build Download and install: Python with IDLE editor from its official website. Run following commands in the terminal to install Python dependencies: pip install numpy pandas matplotlib skfuzzy lark Open IDLE and load Implementation/ITL.py. Launch ITL IDE by pressing F5 .","title":"Landing page"},{"location":"#improvement-tracking-language-itl","text":"Subscribe to our mailing list","title":"Improvement Tracking Language - ITL"},{"location":"#description","text":"This is an implementation of the Internal DSL interpreted with Python. The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings.","title":"Description"},{"location":"#features-and-detailed-info","text":"Complete documentation with detailed list of features, internal organization and use cases is available in this online manual. Also, you can check out the PDF version of the user manual here.","title":"Features and detailed info"},{"location":"#build","text":"Download and install: Python with IDLE editor from its official website. Run following commands in the terminal to install Python dependencies: pip install numpy pandas matplotlib skfuzzy lark Open IDLE and load Implementation/ITL.py. Launch ITL IDE by pressing F5 .","title":"Build"},{"location":"change/","text":"Version history This section of the documentation will be available soon.","title":"Version history"},{"location":"change/#version-history","text":"This section of the documentation will be available soon.","title":"Version history"},{"location":"diagram/","text":"Block Diagram Internal Organization The following block diagram shows an internal organization of the ITL:","title":"Block diagram"},{"location":"diagram/#block-diagram","text":"","title":"Block Diagram"},{"location":"diagram/#internal-organization","text":"The following block diagram shows an internal organization of the ITL:","title":"Internal Organization"},{"location":"fuzzy-intro/","text":"What are fuzzy sets? Classical sets vs Fuzzy sets Fuzzy logic is a mathematical theoretical model made to bridge the gap between humans and computers. Computers think about things in a mathematical and logical fashion, but human beings don't. We have an edge of ambiguity, so this theory allow computers to think with a sense of ambiguity as well. Human ambiguity If we want an example of what exactly a fuzzy set looks like, we could survey and gather some data. Let's say we want to know what is middle-aged? If we surveyed 100 people about what age middle-age starts and ends at, we might end up with a definite majority, resulting in middle-age starting at 35 and middle-age ending at 55. Therefore, we could say that between the age 35 and 55, is considered middle-age. Classical set theory cannot process this kind of information. But in a fuzzy set world, this is a peace of cake.","title":"What are fuzzy sets?"},{"location":"fuzzy-intro/#what-are-fuzzy-sets","text":"","title":"What are fuzzy sets?"},{"location":"fuzzy-intro/#classical-sets-vs-fuzzy-sets","text":"Fuzzy logic is a mathematical theoretical model made to bridge the gap between humans and computers. Computers think about things in a mathematical and logical fashion, but human beings don't. We have an edge of ambiguity, so this theory allow computers to think with a sense of ambiguity as well.","title":"Classical sets vs Fuzzy sets"},{"location":"fuzzy-intro/#human-ambiguity","text":"If we want an example of what exactly a fuzzy set looks like, we could survey and gather some data. Let's say we want to know what is middle-aged? If we surveyed 100 people about what age middle-age starts and ends at, we might end up with a definite majority, resulting in middle-age starting at 35 and middle-age ending at 55. Therefore, we could say that between the age 35 and 55, is considered middle-age. Classical set theory cannot process this kind of information. But in a fuzzy set world, this is a peace of cake.","title":"Human ambiguity"},{"location":"fuzzy-mes-par/","text":"Choosing measurement parameters This section of the documentation will be available soon.","title":"Choosing measurement parameters"},{"location":"fuzzy-mes-par/#choosing-measurement-parameters","text":"This section of the documentation will be available soon.","title":"Choosing measurement parameters"},{"location":"fuzzy-radar/","text":"Radar Charts This section of the documentation will be available soon.","title":"Radar charts"},{"location":"fuzzy-radar/#radar-charts","text":"This section of the documentation will be available soon.","title":"Radar Charts"},{"location":"fuzzy/","text":"Fuzzy membership functions What is fuzzy membership function? The fuzzy membership function computes the element's degree of the membership to a given fuzzy set. This measurement is numerically presented as the value between 0 and 1. Supported functions At the moment, ITL supports two types of fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of the fuzzy function based on provided parameters. The type 1 Fuzzy membership function \u2014 Rising Slope This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 0,& \\text{ if } v_i \\leq a_i \\\\ \\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 1,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 1 fuzzy function: Note how the function starts rising after value of 100 (so the parameter a here equals 100) and has an linear increasing value up to 400. After this point the grade (y-axis) has the constant value of 1.0 (so the parameter b here equals to 400). The type 2 Fuzzy membership function \u2014 Falling Slope This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 1,& \\text{ if } v_i \\leq a_i \\\\ 1-\\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 0,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 2 fuzzy function: Note how the function immediately starts falling until value of 5 (so the parameter a here equals 0) After this point the grade (y-axis) has the constant value of 0.0 (so the parameter b here equals to 5).","title":"Fuzzy membership functions"},{"location":"fuzzy/#fuzzy-membership-functions","text":"","title":"Fuzzy membership functions"},{"location":"fuzzy/#what-is-fuzzy-membership-function","text":"The fuzzy membership function computes the element's degree of the membership to a given fuzzy set. This measurement is numerically presented as the value between 0 and 1.","title":"What is fuzzy membership function?"},{"location":"fuzzy/#supported-functions","text":"At the moment, ITL supports two types of fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of the fuzzy function based on provided parameters.","title":"Supported functions"},{"location":"fuzzy/#the-type-1-fuzzy-membership-function-rising-slope","text":"This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 0,& \\text{ if } v_i \\leq a_i \\\\ \\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 1,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 1 fuzzy function: Note how the function starts rising after value of 100 (so the parameter a here equals 100) and has an linear increasing value up to 400. After this point the grade (y-axis) has the constant value of 1.0 (so the parameter b here equals to 400).","title":"The type 1 Fuzzy membership function \u2014 Rising Slope"},{"location":"fuzzy/#the-type-2-fuzzy-membership-function-falling-slope","text":"This fuzzy membership function can be defined as: \\(\\mu_{F_i}(v_i)= \\begin{cases} 1,& \\text{ if } v_i \\leq a_i \\\\ 1-\\frac{v_i-a_i}{b_i-a_i},& \\text{ if } a_i < v_i < b_i \\\\ 0,& \\text{ if } v_i \\geq b_i \\end{cases}\\) where \ud835\udc4e \ud835\udc56 , \ud835\udc4f \ud835\udc56 , \ud835\udc63 \ud835\udc56 , are the best, worst and measured value of \ud835\udc56\u2212th metric respectively and \ud835\udf07 \ud835\udc39\ud835\udc56 (\ud835\udc63 \ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. The following graph represents an example of Type 2 fuzzy function: Note how the function immediately starts falling until value of 5 (so the parameter a here equals 0) After this point the grade (y-axis) has the constant value of 0.0 (so the parameter b here equals to 5).","title":"The type 2 Fuzzy membership function \u2014 Falling Slope"},{"location":"grammar/","text":"Syntax and Grammar Syntax The following excerpt shows the syntax of ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. Izvestaj+ \"Naslov izve\u0161ta\u0458a\" { metrike+ Skup_metrika_1 { Metrika_1+ = (v1,b1,\u04301) } #komentar ispisi Skup_metrika_1+; oceni Skup_metrika_1; nacrtaj metriku Metrika_1+ iz Skup_metrika_1; oceni uporedno Skup_metrika_1, Skup_metrika_2; oceni zbirno Skup_metrika_1+; oceni pojedinacno Skup_metrika_1+; } Grammar The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"izvestaj\" STRING code_block -> pocetak_izvestaja | \"metrike\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"oceni\" NAME \";\" -> oceni_metrike | \"oceni zbirno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"oceni uporedno\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"oceni pojedinacno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"ispisi\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"nacrtaj metriku\" NAME (\",\" NAME)* \"iz\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> iz COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Grammar"},{"location":"grammar/#syntax-and-grammar","text":"","title":"Syntax and Grammar"},{"location":"grammar/#syntax","text":"The following excerpt shows the syntax of ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. Izvestaj+ \"Naslov izve\u0161ta\u0458a\" { metrike+ Skup_metrika_1 { Metrika_1+ = (v1,b1,\u04301) } #komentar ispisi Skup_metrika_1+; oceni Skup_metrika_1; nacrtaj metriku Metrika_1+ iz Skup_metrika_1; oceni uporedno Skup_metrika_1, Skup_metrika_2; oceni zbirno Skup_metrika_1+; oceni pojedinacno Skup_metrika_1+; }","title":"Syntax"},{"location":"grammar/#grammar","text":"The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"izvestaj\" STRING code_block -> pocetak_izvestaja | \"metrike\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"oceni\" NAME \";\" -> oceni_metrike | \"oceni zbirno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"oceni uporedno\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"oceni pojedinacno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"ispisi\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"nacrtaj metriku\" NAME (\",\" NAME)* \"iz\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> iz COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Grammar"},{"location":"ide-as-res/","text":"Understanding assessment results This section of the documentation will be available soon.","title":"Understanding assessment results"},{"location":"ide-as-res/#understanding-assessment-results","text":"This section of the documentation will be available soon.","title":"Understanding assessment results"},{"location":"ide-exi-pro/","text":"Opening the existing project This section of the documentation will be available soon.","title":"Opening the existing project"},{"location":"ide-exi-pro/#opening-the-existing-project","text":"This section of the documentation will be available soon.","title":"Opening the existing project"},{"location":"ide-keyboard/","text":"Keyboard shortcuts Supported keyboard shortcuts The following table shows the complete list of keyboard shortcuts supported by ITL IDE: Action Keyboard shortcut Action result Help F1 The help window appears. New project Ctrl + N The new project opens. Open project Ctrl + O The exsisting project loads. Save project Ctrl + S Current active project is saved. Save poject as Ctrl + Alt + S Save file as dialoge is opened. Clear text in code editor Ctrl + D Code editor text is cleared. Cut Ctrl + X The selected text is transefered to a clipboard. Copy Ctrl + C The selected text is copied to a clipboard. Paste Ctrl + V Copied text from a clipboard i pasted. Undo Ctrl + Z The last user action is undoed. Redo Ctrl + Y The last user action is redoed. Exit Alt + F4 Exits the ITL IDE.","title":"Keyboard shortcuts"},{"location":"ide-keyboard/#keyboard-shortcuts","text":"","title":"Keyboard shortcuts"},{"location":"ide-keyboard/#supported-keyboard-shortcuts","text":"The following table shows the complete list of keyboard shortcuts supported by ITL IDE: Action Keyboard shortcut Action result Help F1 The help window appears. New project Ctrl + N The new project opens. Open project Ctrl + O The exsisting project loads. Save project Ctrl + S Current active project is saved. Save poject as Ctrl + Alt + S Save file as dialoge is opened. Clear text in code editor Ctrl + D Code editor text is cleared. Cut Ctrl + X The selected text is transefered to a clipboard. Copy Ctrl + C The selected text is copied to a clipboard. Paste Ctrl + V Copied text from a clipboard i pasted. Undo Ctrl + Z The last user action is undoed. Redo Ctrl + Y The last user action is redoed. Exit Alt + F4 Exits the ITL IDE.","title":"Supported keyboard shortcuts"},{"location":"ide-new-pro/","text":"Creating a new project This section of the documentation will be available soon.","title":"Creating a new project"},{"location":"ide-new-pro/#creating-a-new-project","text":"This section of the documentation will be available soon.","title":"Creating a new project"},{"location":"ide-run/","text":"Running code This section of the documentation will be available soon.","title":"Running code"},{"location":"ide-run/#running-code","text":"This section of the documentation will be available soon.","title":"Running code"},{"location":"ide-sav-pro/","text":"Saving project This section of the documentation will be available soon.","title":"Saving project"},{"location":"ide-sav-pro/#saving-project","text":"This section of the documentation will be available soon.","title":"Saving project"},{"location":"ide/","text":"Introuduction to ITL IDE Introuduction IDL's integrated development environment was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports. Supported features IDL's integrated development environment was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports. File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of the execution result Automated populating of editor\u2019s text box with the code pattern Keyboard shortcuts Debugging The first example of syntax error shows a misspelled variable name E_bannka_1 (it should have been E_banka_1 ). IDE visually marks the error and prints its contents in the IDL's terminal. The second example of syntax error shows a misspelled instruction name ocenni (it should have been ocenni ) IDE visually marks the error and prints its contents in the IDL's terminal with an error line number.","title":"Introduction"},{"location":"ide/#introuduction-to-itl-ide","text":"","title":"Introuduction to ITL IDE"},{"location":"ide/#introuduction","text":"IDL's integrated development environment was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports.","title":"Introuduction"},{"location":"ide/#supported-features","text":"IDL's integrated development environment was implemented with the help of the Tkinter Python library. Its purpose is to facilitate development of IDL assessment reports. File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of the execution result Automated populating of editor\u2019s text box with the code pattern Keyboard shortcuts","title":"Supported features"},{"location":"ide/#debugging","text":"The first example of syntax error shows a misspelled variable name E_bannka_1 (it should have been E_banka_1 ). IDE visually marks the error and prints its contents in the IDL's terminal. The second example of syntax error shows a misspelled instruction name ocenni (it should have been ocenni ) IDE visually marks the error and prints its contents in the IDL's terminal with an error line number.","title":"Debugging"},{"location":"indexl/","text":"body{ background-color: #33075b; background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='%23dd2b00' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='%23be1200' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='%23cb022b' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='%23b5121c' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='%23d82e34' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='%23cc3022' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='%23c40a63' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='%23ca282e' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='%23cb1f64' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='%23c13f3f' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='%23ba1489' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='%23c54c42' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\"); background-attachment: fixed; background-size: cover; } /*Hide footer*/ .md-footer { display:none; } .md-content__inner { display:none; } /* Application header should be static for the landing page */ .md-header { position: initial; } /* Remove spacing, as we cannot hide it completely */ .md-main__inner { margin: 0; } /* Hide main content for now */ .md-content { } /* Hide table of contents */ @media screen and (min-width: 60em) { .md-sidebar--secondary { display: none; } } /* Hide navigation */ @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none; } }","title":"Indexl"},{"location":"purpose/","text":"Intended use and purpose General purpose The purpose of the developed language is to provide assessors with an easy way of assessing and visually displaying company performance metric ratings. Combining metrics Metrics can be combined from different business domains (for example, metrics for assessing user satisfaction and financial performance metrics for overall assessment of electronic banking web platform). Assessment methodology For the assessment methodology, the assessment using Fuzzy membership functions was chosen. Upon completing the calculation i.e. assessment process of selected Fuzzy metrics, the visual and numerical results are presented to the assessor. At the end, assessor can investigate assessment results, both by investigating numerical results as far as investigating graphical metrics representation.","title":"Intended use and purose"},{"location":"purpose/#intended-use-and-purpose","text":"","title":"Intended use and purpose"},{"location":"purpose/#general-purpose","text":"The purpose of the developed language is to provide assessors with an easy way of assessing and visually displaying company performance metric ratings.","title":"General purpose"},{"location":"purpose/#combining-metrics","text":"Metrics can be combined from different business domains (for example, metrics for assessing user satisfaction and financial performance metrics for overall assessment of electronic banking web platform).","title":"Combining metrics"},{"location":"purpose/#assessment-methodology","text":"For the assessment methodology, the assessment using Fuzzy membership functions was chosen. Upon completing the calculation i.e. assessment process of selected Fuzzy metrics, the visual and numerical results are presented to the assessor. At the end, assessor can investigate assessment results, both by investigating numerical results as far as investigating graphical metrics representation.","title":"Assessment methodology"},{"location":"quick/","text":"Quick introduction One assessment methodology to rule them all In order to obtain a holistic view of degree of business performance, an universal assessment methodology is needed. The ITL performance system can help you to create science backed up methodology approach to measure and grade performance of your business system. In this way, you can analytically track and measure progress of business KPI-s and make corrective acts to improve your business KPI-s. Easy to learn even for non-professionals ITL-s syntax is specially designed to be easy to learn for non-professionals. In the design process, the state of the art user experience methodology was used. Powerful graphic reports and easy to grasp performance rate People are visual. So, in order to maximise the power of business reporting, we made an easy and powerful graphic reporting system so you can easily understand the results of assessments. Backed up with science This project is the result of research, adaptation and implementation of the proposed scientific models by the Omogbai, Farzad and Pakdil. Also, the Fuzzy set theory, which is the base of this system, was implemented according to research proposals made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Quick introduction"},{"location":"quick/#quick-introduction","text":"","title":"Quick introduction"},{"location":"quick/#one-assessment-methodology-to-rule-them-all","text":"In order to obtain a holistic view of degree of business performance, an universal assessment methodology is needed. The ITL performance system can help you to create science backed up methodology approach to measure and grade performance of your business system. In this way, you can analytically track and measure progress of business KPI-s and make corrective acts to improve your business KPI-s.","title":"One assessment methodology to rule them all"},{"location":"quick/#easy-to-learn-even-for-non-professionals","text":"ITL-s syntax is specially designed to be easy to learn for non-professionals. In the design process, the state of the art user experience methodology was used.","title":"Easy to learn even for non-professionals"},{"location":"quick/#powerful-graphic-reports-and-easy-to-grasp-performance-rate","text":"People are visual. So, in order to maximise the power of business reporting, we made an easy and powerful graphic reporting system so you can easily understand the results of assessments.","title":"Powerful graphic reports and easy to grasp performance rate"},{"location":"quick/#backed-up-with-science","text":"This project is the result of research, adaptation and implementation of the proposed scientific models by the Omogbai, Farzad and Pakdil. Also, the Fuzzy set theory, which is the base of this system, was implemented according to research proposals made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Backed up with science"},{"location":"syntax/","text":"Syntax and Grammar Syntax The following excerpt shows the syntax of ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. report+ \"Report Tile\" { metrics+ Metric_set_1 { Metric_1+ = (v1,b1,\u04301) } #comment print SMetric_set_1+; grade Metric_set_1; draw metric Metric_1+ from Metric_set_1; grade comparative Metric_set_1, Metric_set_2; grade cumulative Metric_set_1+; grade singular Metric_set_1+; } Grammar The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"report\" STRING code_block -> pocetak_izvestaja | \"metrics\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"grade\" NAME \";\" -> oceni_metrike | \"grade cumulative\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"grade comparative\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"grade singular\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"print\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"draw metric\" NAME (\",\" NAME)* \"from\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> from COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Syntax"},{"location":"syntax/#syntax-and-grammar","text":"","title":"Syntax and Grammar"},{"location":"syntax/#syntax","text":"The following excerpt shows the syntax of ITL and designed tree structure of assessment. Symbol + represents the possibility of using one or several instructions/variables. report+ \"Report Tile\" { metrics+ Metric_set_1 { Metric_1+ = (v1,b1,\u04301) } #comment print SMetric_set_1+; grade Metric_set_1; draw metric Metric_1+ from Metric_set_1; grade comparative Metric_set_1, Metric_set_2; grade cumulative Metric_set_1+; grade singular Metric_set_1+; }","title":"Syntax"},{"location":"syntax/#grammar","text":"The following excerpt shows the grammar of ITL. For interpreting entered syntax by this definition, Lark parser was used. start: instruction+ instruction: \"report\" STRING code_block -> pocetak_izvestaja | \"metrics\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"grade\" NAME \";\" -> oceni_metrike | \"grade cumulative\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"grade comparative\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"grade singular\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"print\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"draw metric\" NAME (\",\" NAME)* \"from\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> from COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Grammar"},{"location":"tutorial/","text":"Tutorial Introuduction This short tutorial will guide you through the basic ITL capabilites. For the sake of purpose, we will asses perfomance metrics of the three digital products used by three diffrent banks operating under one bank group. Bank names are going to be E_bank_1 , E_bank_2 , E_bank_3 . Of course, when we speak about digital products, in this context we imply that the digital products are e-banking web applications. What are we going to measure and assess? We will define five metrics that will be evaluated through this evaluation system. Metric scores are calculated using the Python Skfuzzy Library. We will measure the quality of user experience for three imaginary e-banking systems of three banks within the same group of banks. Metrics deifnitions (monitored on a monthly basis): Metric 1: Number of complaints Definition: The number of users complaints on the web application perofrmance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5 Metric 2: Loan lead time Definition: The average time passed from sending a loan application until the loan approvement Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 days Acceptable value (a) 15 days Metric 3: Number of the approved loans Definition: The ammount of approved loans Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 500 Acceptable value (a) 30 Metric 4: Application screen time Definition: The average daily time spent using the web application Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min Metric 5: New issued credit cards Definition: The smmount of a new issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs. Assessment code report \"June Performance Assessment Report - E-bank Group\" { # We define metrics sets for all three banks metrics E_bank_1 { # Defining metric Complaints Compl = (3,20,5) New_Credit_Cards = (218, 100, 400) Screen_Time = (7.4, 1, 15) New_Loans = (305,30,500) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = (1,20,5) New_Credit_Cards = (295, 100, 400) Screen_Time = (4.9, 1, 15) New_Loans = (352,30,500) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = (4,20,5) New_Credit_Cards = (191, 100, 400) Screen_Time = (9.5, 1, 15) New_Loans = (254,30,500) Loan_Lead_Time = (2.52,30,15) } # Print out overall grade of all three banks grade cumulative E_bank_1,E_bank_2,E_bank_3; # Assess individually grades of each bank grade singular E_bank_1, E_bank_2, E_bank_3; # Third bank got worst grade. Lets examine why: grade E_bank_3; # Third bank made worst result for metrics Compl # and New_Credit_Cards. Lets draw them so we # can better examine them: draw metric Compl, New_Credit_Cards from E_bank_3; # At the end, we compare overall successfulness # of first and second bank: grade comparative E_bank_1, E_bank_2; # To print all metrics data (entered raw data) # we can use the following instruction: print E_bank_1, E_bank_2, E_bank_3; } What are we going to get from assessment? Numerical Result Radar Chart Comparative Radar Chart Fuzzy Metric - Type 1 Fuzzy Metric - Type 2","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"","title":"Tutorial"},{"location":"tutorial/#introuduction","text":"This short tutorial will guide you through the basic ITL capabilites. For the sake of purpose, we will asses perfomance metrics of the three digital products used by three diffrent banks operating under one bank group. Bank names are going to be E_bank_1 , E_bank_2 , E_bank_3 . Of course, when we speak about digital products, in this context we imply that the digital products are e-banking web applications.","title":"Introuduction"},{"location":"tutorial/#what-are-we-going-to-measure-and-assess","text":"We will define five metrics that will be evaluated through this evaluation system. Metric scores are calculated using the Python Skfuzzy Library. We will measure the quality of user experience for three imaginary e-banking systems of three banks within the same group of banks. Metrics deifnitions (monitored on a monthly basis):","title":"What are we going to measure and assess?"},{"location":"tutorial/#metric-1-number-of-complaints","text":"Definition: The number of users complaints on the web application perofrmance. Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 Acceptable value (a) 5","title":"Metric 1: Number of complaints"},{"location":"tutorial/#metric-2-loan-lead-time","text":"Definition: The average time passed from sending a loan application until the loan approvement Metric parameters: Parameter Value Fuzzy type: Type 2 \u2198\ufe0f Ideal value (b) 0 days Acceptable value (a) 15 days","title":"Metric 2: Loan lead time"},{"location":"tutorial/#metric-3-number-of-the-approved-loans","text":"Definition: The ammount of approved loans Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 500 Acceptable value (a) 30","title":"Metric 3: Number of the approved loans"},{"location":"tutorial/#metric-4-application-screen-time","text":"Definition: The average daily time spent using the web application Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 15 min Acceptable value (a) 1 min","title":"Metric 4: Application screen time"},{"location":"tutorial/#metric-5-new-issued-credit-cards","text":"Definition: The smmount of a new issued credit cards Metric parameters: Parameter Value Fuzzy type: Type 1 \u2197\ufe0f Ideal value (b) 400 pcs. Acceptable value (a) 100 pcs.","title":"Metric 5: New issued credit cards"},{"location":"tutorial/#assessment-code","text":"report \"June Performance Assessment Report - E-bank Group\" { # We define metrics sets for all three banks metrics E_bank_1 { # Defining metric Complaints Compl = (3,20,5) New_Credit_Cards = (218, 100, 400) Screen_Time = (7.4, 1, 15) New_Loans = (305,30,500) Loan_Lead_Time = (4.43,30,15) } metrics E_bank_2 { Compl = (1,20,5) New_Credit_Cards = (295, 100, 400) Screen_Time = (4.9, 1, 15) New_Loans = (352,30,500) Loan_Lead_Time = (8.82,30,15) } metrics E_bank_3 { Compl = (4,20,5) New_Credit_Cards = (191, 100, 400) Screen_Time = (9.5, 1, 15) New_Loans = (254,30,500) Loan_Lead_Time = (2.52,30,15) } # Print out overall grade of all three banks grade cumulative E_bank_1,E_bank_2,E_bank_3; # Assess individually grades of each bank grade singular E_bank_1, E_bank_2, E_bank_3; # Third bank got worst grade. Lets examine why: grade E_bank_3; # Third bank made worst result for metrics Compl # and New_Credit_Cards. Lets draw them so we # can better examine them: draw metric Compl, New_Credit_Cards from E_bank_3; # At the end, we compare overall successfulness # of first and second bank: grade comparative E_bank_1, E_bank_2; # To print all metrics data (entered raw data) # we can use the following instruction: print E_bank_1, E_bank_2, E_bank_3; }","title":"Assessment code"},{"location":"tutorial/#what-are-we-going-to-get-from-assessment","text":"Numerical Result","title":"What are we going to get from assessment?"},{"location":"tutorial/#radar-chart","text":"","title":"Radar Chart"},{"location":"tutorial/#comparative-radar-chart","text":"","title":"Comparative Radar Chart"},{"location":"tutorial/#fuzzy-metric-type-1","text":"","title":"Fuzzy Metric - Type 1"},{"location":"tutorial/#fuzzy-metric-type-2","text":"","title":"Fuzzy Metric - Type 2"}]}