{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Improvement Tracking Language - ITL Description This is implementation of the Internal DSL interpreted with Python. The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings. Features and detailed info Complete documentation with detailed list of features, internal organization and use cases is available in this online manual. Also, you can check out the PDF version of user manual here. Build Download and install: Python with IDLE editor from its official website pip install numpy pandas matplotlib skfuzzy lark - to install Python dependencies Open IDLE and load Implementation/ITL.py. Launch ITL IDE by pressing F5.","title":"Home"},{"location":"#improvement-tracking-language-itl","text":"","title":"Improvement Tracking Language - ITL"},{"location":"#description","text":"This is implementation of the Internal DSL interpreted with Python. The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings.","title":"Description"},{"location":"#features-and-detailed-info","text":"Complete documentation with detailed list of features, internal organization and use cases is available in this online manual. Also, you can check out the PDF version of user manual here.","title":"Features and detailed info"},{"location":"#build","text":"Download and install: Python with IDLE editor from its official website pip install numpy pandas matplotlib skfuzzy lark - to install Python dependencies Open IDLE and load Implementation/ITL.py. Launch ITL IDE by pressing F5.","title":"Build"},{"location":"diagram/","text":"Interpreting Block Diagram Block Diagram The following block diagram shows an internal organization of the ITL:","title":"Block Diagram"},{"location":"diagram/#interpreting-block-diagram","text":"","title":"Interpreting Block Diagram"},{"location":"diagram/#block-diagram","text":"The following block diagram shows an internal organization of the ITL:","title":"Block Diagram"},{"location":"fuzzy/","text":"Fuzzy membership functions Introduction At the moment, ITL supports two types of Fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of Fuzzy function based on parameters provided. Type 1 Fuzzy membership function - Rising Slope Type 1 Fuzzy membership function function can be defined as: where \ud835\udc4e_\ud835\udc56, \ud835\udc4f_\ud835\udc56, \ud835\udc63_\ud835\udc56, are best, worst and measured value of \ud835\udc56\u2212th metric respectively and, \ud835\udf07_\ud835\udc39\ud835\udc56 (\ud835\udc63_\ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1. Type 2 Fuzzy membership function - Falling Slope Type 2 Fuzzy membership function function can be defined as: where \ud835\udc4e_\ud835\udc56, \ud835\udc4f_\ud835\udc56, \ud835\udc63_\ud835\udc56, are best, worst and measured value of \ud835\udc56\u2212th metric respectively and, \ud835\udf07_\ud835\udc39\ud835\udc56 (\ud835\udc63_\ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1.","title":"Fuzzy membership functions and performance metrics"},{"location":"fuzzy/#fuzzy-membership-functions","text":"","title":"Fuzzy membership functions"},{"location":"fuzzy/#introduction","text":"At the moment, ITL supports two types of Fuzzy membership functions (special case of triangular fuzzy function). But the user doesn't need to worry about which function to use. IDL automatically recognises the type of Fuzzy function based on parameters provided.","title":"Introduction"},{"location":"fuzzy/#type-1-fuzzy-membership-function-rising-slope","text":"Type 1 Fuzzy membership function function can be defined as: where \ud835\udc4e_\ud835\udc56, \ud835\udc4f_\ud835\udc56, \ud835\udc63_\ud835\udc56, are best, worst and measured value of \ud835\udc56\u2212th metric respectively and, \ud835\udf07_\ud835\udc39\ud835\udc56 (\ud835\udc63_\ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1.","title":"Type 1 Fuzzy membership function - Rising Slope"},{"location":"fuzzy/#type-2-fuzzy-membership-function-falling-slope","text":"Type 2 Fuzzy membership function function can be defined as: where \ud835\udc4e_\ud835\udc56, \ud835\udc4f_\ud835\udc56, \ud835\udc63_\ud835\udc56, are best, worst and measured value of \ud835\udc56\u2212th metric respectively and, \ud835\udf07_\ud835\udc39\ud835\udc56 (\ud835\udc63_\ud835\udc56 ) representing \ud835\udc56\u2212th metric\u2019s grade between 0 and 1.","title":"Type 2 Fuzzy membership function - Falling Slope"},{"location":"grammar/","text":"Syntax and Grammar Syntax The following shows the syntax of ITL and designed tree structure of assessment. Symbol + possibility of using one or several instructions/variables. Izvestaj+ \"Naslov izve\u0161ta\u0458a\" { metrike+ Skup_metrika_1 { Metrika_1+ = (v1,b1,\u04301) } #komentar ispisi Skup_metrika_1+; oceni Skup_metrika_1; nacrtaj metriku Metrika_1+ iz Skup_metrika_1; oceni uporedno Skup_metrika_1, Skup_metrika_2; oceni zbirno Skup_metrika_1+; oceni pojedinacno Skup_metrika_1+; } Grammar The following shows the grammar of ITL. For interpreting enterd syntax by this definitions, Lark parser is used. start: instruction+ instruction: \"izvestaj\" STRING code_block -> pocetak_izvestaja | \"metrike\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"oceni\" NAME \";\" -> oceni_metrike | \"oceni zbirno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"oceni uporedno\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"oceni pojedinacno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"ispisi\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"nacrtaj metriku\" NAME (\",\" NAME)* \"iz\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> iz COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Syntax and Grammar"},{"location":"grammar/#syntax-and-grammar","text":"","title":"Syntax and Grammar"},{"location":"grammar/#syntax","text":"The following shows the syntax of ITL and designed tree structure of assessment. Symbol + possibility of using one or several instructions/variables. Izvestaj+ \"Naslov izve\u0161ta\u0458a\" { metrike+ Skup_metrika_1 { Metrika_1+ = (v1,b1,\u04301) } #komentar ispisi Skup_metrika_1+; oceni Skup_metrika_1; nacrtaj metriku Metrika_1+ iz Skup_metrika_1; oceni uporedno Skup_metrika_1, Skup_metrika_2; oceni zbirno Skup_metrika_1+; oceni pojedinacno Skup_metrika_1+; }","title":"Syntax"},{"location":"grammar/#grammar","text":"The following shows the grammar of ITL. For interpreting enterd syntax by this definitions, Lark parser is used. start: instruction+ instruction: \"izvestaj\" STRING code_block -> pocetak_izvestaja | \"metrike\" NAME \"{\" dict_item* \"}\" -> skup_metrika | \"oceni\" NAME \";\" -> oceni_metrike | \"oceni zbirno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_z | \"oceni uporedno\" NAME \",\" NAME\";\" -> oceni_metrike_u | \"oceni pojedinacno\" NAME (\",\" NAME)* \";\" -> oceni_metrike_p | \"ispisi\" NAME (\",\" NAME)* \";\" -> ispisi_metrike | \"nacrtaj metriku\" NAME (\",\" NAME)* \"iz\" set -> nacrtaj_metriku code_block: \"{\" instruction+ \"}\" -> blok_naredbi dict_item: NAME \"=\" dict_subitem -> naziv_metrike dict_subitem: \"(\" NUMBER \",\" NUMBER \",\" NUMBER \")\" -> parametri_metrike set: NAME \";\" -> iz COMMENT : /#.*/ %import common.CNAME -> NAME %import common.NUMBER -> NUMBER %import common.ESCAPED_STRING -> STRING %import common.WS %ignore WS %ignore COMMENT `","title":"Grammar"},{"location":"ide/","text":"Introuduction to ITL IDE Introuduction IDL's integrated development environment was implemented with the help of the Tkinter Python library. It's purpose is to facilitate development of IDL assessment reports. Supported features IDL's integrated development environment was implemented with the help of the Tkinter Python library. It's purpose is to facilitate development of IDL assessment reports. File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of execution result Automatic populating of editor\u2019s text box with code Keyboard shortcuts Debugging First example of syntax error: Misspelled variable name E_banka_1 ( E_bannka_1 ). IDE visually marks the error and prints it's contents in terminal. Second example of syntax error: Misspelled instruction name oceni ( ocenni ) IDE visually marks the error and prints its contents in terminal with error line number.","title":"Introduction to ITL IDE"},{"location":"ide/#introuduction-to-itl-ide","text":"","title":"Introuduction to ITL IDE"},{"location":"ide/#introuduction","text":"IDL's integrated development environment was implemented with the help of the Tkinter Python library. It's purpose is to facilitate development of IDL assessment reports.","title":"Introuduction"},{"location":"ide/#supported-features","text":"IDL's integrated development environment was implemented with the help of the Tkinter Python library. It's purpose is to facilitate development of IDL assessment reports. File manipulation (opening, editing, saving) Standard text operations (insert, copy, cut, paste) Undo/Redo operations Code execution Visual support for easy locating errors in syntax Numerical and graphical printing of execution result Automatic populating of editor\u2019s text box with code Keyboard shortcuts","title":"Supported features"},{"location":"ide/#debugging","text":"First example of syntax error: Misspelled variable name E_banka_1 ( E_bannka_1 ). IDE visually marks the error and prints it's contents in terminal. Second example of syntax error: Misspelled instruction name oceni ( ocenni ) IDE visually marks the error and prints its contents in terminal with error line number.","title":"Debugging"},{"location":"purpose/","text":"Intended use and purpose General purpose The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings. Combining metrics Metrics can be combined from different business domains (for example, metrics for assessing user satisfaction and financial performance metrics for overall assessment of electronic banking web platform). Assessment methodology For the assessment methodology, the assessment using Fuzzy membership functions was chosen. Upon completing the calculation i.e. assessment process of selected Fuzzy metrics, the visual and numerical results are presented to the assessor. At the end, assessor can investigate assessment results, both by investigating numerical results as far as investigating graphical metrcis representation.","title":"Intended use and purose"},{"location":"purpose/#intended-use-and-purpose","text":"","title":"Intended use and purpose"},{"location":"purpose/#general-purpose","text":"The purpose of the developed language is to provide assessors with an easy way of assessing and visually displayng company performance metric ratings.","title":"General purpose"},{"location":"purpose/#combining-metrics","text":"Metrics can be combined from different business domains (for example, metrics for assessing user satisfaction and financial performance metrics for overall assessment of electronic banking web platform).","title":"Combining metrics"},{"location":"purpose/#assessment-methodology","text":"For the assessment methodology, the assessment using Fuzzy membership functions was chosen. Upon completing the calculation i.e. assessment process of selected Fuzzy metrics, the visual and numerical results are presented to the assessor. At the end, assessor can investigate assessment results, both by investigating numerical results as far as investigating graphical metrcis representation.","title":"Assessment methodology"},{"location":"quick/","text":"Quick introduction One assesment methodology to rule them all In order to obtain a holistic view of degree of business performance, a universal assessment methodology is needed. The ITL performance system can help you to create science baked up methodology approach to measure and grade performance of your business system. In this way, you can analytically track and measure progress of business KPI and make corrective acts to improve your business KPI-s. Easy to learn even for non-professionals ITL-s syntax is specially designed to be easy to learn for non-professionals. In the design process, the state of the art user experience methodology was used. Powerfull graphic reports and easy to grasp performance rate People are visual. So, in order to maximise the power of business reporting, we made an easy and powerful graphic reporting system so you can easily understand the results of assessments. Backed up with science This project was the result of research, adaptation and implementation of the models created by the scientific research conducted by Omogbai, Farzad and Pakdil. Also, the Fuzzy set theory, which is the base of this system was implemented according go original research proposal made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Quick introduction"},{"location":"quick/#quick-introduction","text":"","title":"Quick introduction"},{"location":"quick/#one-assesment-methodology-to-rule-them-all","text":"In order to obtain a holistic view of degree of business performance, a universal assessment methodology is needed. The ITL performance system can help you to create science baked up methodology approach to measure and grade performance of your business system. In this way, you can analytically track and measure progress of business KPI and make corrective acts to improve your business KPI-s.","title":"One assesment methodology to rule them all"},{"location":"quick/#easy-to-learn-even-for-non-professionals","text":"ITL-s syntax is specially designed to be easy to learn for non-professionals. In the design process, the state of the art user experience methodology was used.","title":"Easy to learn even for non-professionals"},{"location":"quick/#powerfull-graphic-reports-and-easy-to-grasp-performance-rate","text":"People are visual. So, in order to maximise the power of business reporting, we made an easy and powerful graphic reporting system so you can easily understand the results of assessments.","title":"Powerfull graphic reports and easy to grasp performance rate"},{"location":"quick/#backed-up-with-science","text":"This project was the result of research, adaptation and implementation of the models created by the scientific research conducted by Omogbai, Farzad and Pakdil. Also, the Fuzzy set theory, which is the base of this system was implemented according go original research proposal made by \u0141ukasiewicz, Tarski and Zadeh.","title":"Backed up with science"},{"location":"tutorial/","text":"Tutorial Introuduction This short tutorial will guide you through basic ITL capabilites. For the sake of purpose, we will asses perfomance metrics of three digital products used by three diffrent banks operating under one bank group. Bank names are going to be E_bank_1, E_bank_2, E_bank_3. What are we going to measure and asses? We will define five metrics that will be evaluated through this evaluation system. Metric scores are calculated using the Python Skfuzzy Library. We will measure the quality of user experience for three imaginary e-banking systems of three banks within the same group of banks. Metrics deifnitions (monitored on a monthly basis): Complaints Definition: Number of users complaints on web application perofrmance. Metric type: Falling Fuzzy memb. func. Ideal value: 0 (b=0) Acceptable value: 5 (\u0430=5) Time to loan approvement Definition: Average time passed from sending a loan application until loan approvement Metric type: Falling Fuzzy memb. func. Ideal value: 0 (b=0) Acceptable value: 15 days (a=15) Ammount of approved loans Definition: Ammount of approved loans Metric type: Rising Fuzzy memb. func. Ideal value: 500 (b=500) Acceptable value: 30 (a=30) Application screen time Definition: Average time spent using web application (in one day) Metric type: Rising Fuzzy memb. func. Ideal value: 15 minutes (b=15) Acceptable value: 1 minute (a=1) New issued credit cards Definition: Ammount of new issued credit cards Metric type: Rising Fuzzy memb. func. Ideal value: 400 pcs. (b=400) Acceptable value: 100 pcs. (a=100) Assessment code izvestaj \"Nedeljni izvestaj - Grupa E-banka\" { # We define metrics sets for all three banks metrike E_banka_1 { Zalbe = (3, 20, 5) # Defining metric Zalbe NoveKredKartice = (218, 100, 400) ProvedenoVreme = (7.4, 1, 15) NovKredit = (305, 30, 500) VremeOdobrenjaKredita = (4.43, 30, 15) } metrike E_banka_2 { Zalbe = (1, 20, 5) NoveKredKartice = (295, 100, 400) ProvedenoVreme = (4.9, 1, 15) NovKredit = (352, 30, 500) VremeOdobrenjaKredita = (8.82, 30, 15) } metrike E_banka_3 { Zalbe = (4, 20, 5) NoveKredKartice = (191, 100, 400) ProvedenoVreme = (9.5, 1, 15) NovKredit = (254, 30, 500) VremeOdobrenjaKredita = (2.52, 30, 15) } # Print out overall grade of all three banks oceni zbirno E_banka_1, E_banka_2, E_banka_3; # Assess individually grades of each bank oceni pojedinacno E_banka_1, E_banka_2, E_banka_3; # Third bank got worst grade. Let\u2019s examine why: oceni E_banka_3; # Third bank made worst result for metrics Zalbe and NoveKredKartice. # Let\u2019s draw them so we can better examine them: nacrtaj metriku Zalbe, NoveKredKartice iz E_banka_3; # At the end, we compare overall successfulness of first and second bank: oceni uporedno E_banka_1, E_banka_2; # To print all metrics data (entered raw data) we use the following instruction: ispisi E_banka_1, E_banka_2, E_banka_3; } What are we going to get from assessment? Numerical Result Radar Chart Comparative Radar Chart Fuzzy Metric - Type 1 Fuzzy Metric - Type 2","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"","title":"Tutorial"},{"location":"tutorial/#introuduction","text":"This short tutorial will guide you through basic ITL capabilites. For the sake of purpose, we will asses perfomance metrics of three digital products used by three diffrent banks operating under one bank group. Bank names are going to be E_bank_1, E_bank_2, E_bank_3.","title":"Introuduction"},{"location":"tutorial/#what-are-we-going-to-measure-and-asses","text":"We will define five metrics that will be evaluated through this evaluation system. Metric scores are calculated using the Python Skfuzzy Library. We will measure the quality of user experience for three imaginary e-banking systems of three banks within the same group of banks. Metrics deifnitions (monitored on a monthly basis): Complaints Definition: Number of users complaints on web application perofrmance. Metric type: Falling Fuzzy memb. func. Ideal value: 0 (b=0) Acceptable value: 5 (\u0430=5) Time to loan approvement Definition: Average time passed from sending a loan application until loan approvement Metric type: Falling Fuzzy memb. func. Ideal value: 0 (b=0) Acceptable value: 15 days (a=15) Ammount of approved loans Definition: Ammount of approved loans Metric type: Rising Fuzzy memb. func. Ideal value: 500 (b=500) Acceptable value: 30 (a=30) Application screen time Definition: Average time spent using web application (in one day) Metric type: Rising Fuzzy memb. func. Ideal value: 15 minutes (b=15) Acceptable value: 1 minute (a=1) New issued credit cards Definition: Ammount of new issued credit cards Metric type: Rising Fuzzy memb. func. Ideal value: 400 pcs. (b=400) Acceptable value: 100 pcs. (a=100)","title":"What are we going to measure and asses?"},{"location":"tutorial/#assessment-code","text":"izvestaj \"Nedeljni izvestaj - Grupa E-banka\" { # We define metrics sets for all three banks metrike E_banka_1 { Zalbe = (3, 20, 5) # Defining metric Zalbe NoveKredKartice = (218, 100, 400) ProvedenoVreme = (7.4, 1, 15) NovKredit = (305, 30, 500) VremeOdobrenjaKredita = (4.43, 30, 15) } metrike E_banka_2 { Zalbe = (1, 20, 5) NoveKredKartice = (295, 100, 400) ProvedenoVreme = (4.9, 1, 15) NovKredit = (352, 30, 500) VremeOdobrenjaKredita = (8.82, 30, 15) } metrike E_banka_3 { Zalbe = (4, 20, 5) NoveKredKartice = (191, 100, 400) ProvedenoVreme = (9.5, 1, 15) NovKredit = (254, 30, 500) VremeOdobrenjaKredita = (2.52, 30, 15) } # Print out overall grade of all three banks oceni zbirno E_banka_1, E_banka_2, E_banka_3; # Assess individually grades of each bank oceni pojedinacno E_banka_1, E_banka_2, E_banka_3; # Third bank got worst grade. Let\u2019s examine why: oceni E_banka_3; # Third bank made worst result for metrics Zalbe and NoveKredKartice. # Let\u2019s draw them so we can better examine them: nacrtaj metriku Zalbe, NoveKredKartice iz E_banka_3; # At the end, we compare overall successfulness of first and second bank: oceni uporedno E_banka_1, E_banka_2; # To print all metrics data (entered raw data) we use the following instruction: ispisi E_banka_1, E_banka_2, E_banka_3; }","title":"Assessment code"},{"location":"tutorial/#what-are-we-going-to-get-from-assessment","text":"Numerical Result Radar Chart Comparative Radar Chart Fuzzy Metric - Type 1 Fuzzy Metric - Type 2","title":"What are we going to get from assessment?"}]}